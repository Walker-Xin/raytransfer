(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    229065,       5165]
NotebookOptionsPosition[    220798,       5019]
NotebookOutlinePosition[    221233,       5036]
CellTagsIndexPosition[    221190,       5033]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"afbf2944-d3be-42a0-af0a-81cb8edd5f10"],

Cell[BoxData[
 TemplateBox[{
  "Remove", "rmnsm", 
   "\"There are no symbols matching \\\"\\!\\(\\*RowBox[{\\\"\\\\\\\"Global`*\
\\\\\\\"\\\"}]\\)\\\".\"", 2, 1, 1, 30959612795555066325, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9029156561177635`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"41c0a56a-c6b5-4733-bfee-b2d5a4ebc861"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "=", 
   RowBox[{"epsi", "*", "M", "*", "M", "*", 
    RowBox[{"M", "/", "r"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"A1", "=", 
   RowBox[{"1", "+", 
    RowBox[{"a13", "*", 
     RowBox[{"(", 
      RowBox[{"M", "/", "r"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"M", "/", "r"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"M", "/", "r"}], ")"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"A2", "=", 
   RowBox[{"1", "+", 
    RowBox[{"a22", "*", 
     RowBox[{"(", 
      RowBox[{"M", "/", "r"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"M", "/", "r"}], ")"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"A5", "=", 
   RowBox[{"1", "+", 
    RowBox[{"a52", "*", 
     RowBox[{"(", 
      RowBox[{"M", "/", "r"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"M", "/", "r"}], ")"}]}]}]}], ";"}], "\n", 
 RowBox[{}], "\n", 
 RowBox[{
  RowBox[{"B", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"r", "*", "r"}], "+", 
       RowBox[{"a", "*", "a"}]}], ")"}], "*", "A1"}], "-", 
    RowBox[{"a", "*", "a", "*", "A2", "*", 
     RowBox[{"Sin", "[", "theta", "]"}], "*", 
     RowBox[{"Sin", "[", "theta", "]"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Sigma", "=", 
   RowBox[{
    RowBox[{"r", "*", "r"}], "+", 
    RowBox[{"a", "*", "a", "*", 
     RowBox[{"Cos", "[", "theta", "]"}], "*", 
     RowBox[{"Cos", "[", "theta", "]"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Sigmavar", "=", 
   RowBox[{"Sigma", "+", "f"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Delta", "=", 
   RowBox[{
    RowBox[{"r", "*", "r"}], "-", 
    RowBox[{"2", "*", "M", "*", "r"}], "+", 
    RowBox[{"a", "*", "a"}]}]}], ";"}]}], "Input",
 CellLabel->"In[2]:=",ExpressionUUID->"76964c07-3471-44cc-85fe-3da9383c562f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"epsi", "=", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"a13", "=", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"a22", "=", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"a52", "=", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"b1", "=", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"b2", "=", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"c1", "=", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"c2", "=", "0"}], ";"}]}], "Input",
 CellLabel->"In[10]:=",ExpressionUUID->"ade89b06-e147-4f23-b30e-413bc23ba5f5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"b1", "=", "defpar"}], ";"}]], "Input",
 CellLabel->"In[18]:=",ExpressionUUID->"e9e4e5fc-3acd-4630-ad75-a02797b655c5"],

Cell[CellGroupData[{

Cell["Covariant Metric Components", "Chapter",ExpressionUUID->"b510bff1-ba58-45a8-a7f9-1d49b252a700"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"gtt", "=", 
   RowBox[{
    RowBox[{"-", "Sigmavar"}], "*", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Delta", "-", 
       RowBox[{"a", "*", "a", "*", "A2", "*", "A2", "*", 
        RowBox[{"Sin", "[", "theta", "]"}], "*", 
        RowBox[{"Sin", "[", "theta", "]"}]}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"B", "*", "B"}], ")"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"grr", "=", 
   RowBox[{"Sigmavar", "/", 
    RowBox[{"(", 
     RowBox[{"Delta", "*", "A5"}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"gthth", "=", "Sigmavar"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"gpp", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"r", "*", "r"}], "+", 
         RowBox[{"a", "*", "a"}]}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"r", "*", "r"}], "+", 
         RowBox[{"a", "*", "a"}]}], ")"}], "*", "A1", "*", "A1"}], "-", 
      RowBox[{"a", "*", "a", "*", "Delta", "*", 
       RowBox[{"Sin", "[", "theta", "]"}], "*", 
       RowBox[{"Sin", "[", "theta", "]"}]}]}], ")"}], "*", "Sigmavar", "*", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", "theta", "]"}], "^", "2"}], "/", 
     RowBox[{"(", 
      RowBox[{"B", "*", "B"}], ")"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"gtp", "=", 
   RowBox[{
    RowBox[{"-", "a"}], "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"r", "^", "2"}], "+", 
         RowBox[{"a", "^", "2"}]}], ")"}], "*", "A1", "*", "A2"}], "-", 
      "Delta"}], ")"}], "*", "Sigmavar", "*", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", "theta", "]"}], "^", "2"}], "/", 
     RowBox[{"B", "^", "2"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"gtr", "=", 
   RowBox[{
    RowBox[{"b1", "*", 
     RowBox[{"a", "/", 
      RowBox[{"(", 
       RowBox[{"2", "*", "r"}], ")"}]}]}], "+", 
    RowBox[{"b2", "*", "a", "*", 
     RowBox[{"M", "/", 
      RowBox[{"r", "^", "2"}]}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"grp", "=", 
   RowBox[{
    RowBox[{"c1", "*", "a", "*", 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", "theta", "]"}], "^", "2"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", "*", "r"}], ")"}]}]}], "+", 
    RowBox[{"c2", "*", "a", "*", "M", "*", 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", "theta", "]"}], "^", "2"}], "/", 
      RowBox[{"r", "^", "2"}]}]}]}]}], ";"}], "\n", 
 RowBox[{}], "\n", 
 RowBox[{
  RowBox[{"G", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"gtt", ",", "gtr", ",", "0", ",", "gtp"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"gtr", ",", "grr", ",", "0", ",", "grp"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "gthth", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"gtp", ",", "grp", ",", "0", ",", "gpp"}], "}"}]}], "}"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{"G", "//", "MatrixForm"}]}], "Input",
 CellLabel->"In[19]:=",ExpressionUUID->"c88e7f9d-1639-4236-8abf-236dfaf0406b"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["a", "2"], "+", 
         RowBox[{"2", " ", "r", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "theta"}], "]"}]}]}], 
        RowBox[{
         SuperscriptBox["a", "2"], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["r", "2"]}], "+", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "theta"}], "]"}]}]}]]}], 
      FractionBox[
       RowBox[{"a", " ", "defpar"}], 
       RowBox[{"2", " ", "r"}]], "0", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"4", " ", "a", " ", "M", " ", "r", " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "theta", "]"}], "2"]}], 
        RowBox[{
         SuperscriptBox["a", "2"], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["r", "2"]}], "+", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "theta"}], "]"}]}]}]]}]},
     {
      FractionBox[
       RowBox[{"a", " ", "defpar"}], 
       RowBox[{"2", " ", "r"}]], 
      FractionBox[
       RowBox[{
        SuperscriptBox["r", "2"], "+", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "theta", "]"}], "2"]}]}], 
       RowBox[{
        SuperscriptBox["a", "2"], "-", 
        RowBox[{"2", " ", "M", " ", "r"}], "+", 
        SuperscriptBox["r", "2"]}]], "0", "0"},
     {"0", "0", 
      RowBox[{
       SuperscriptBox["r", "2"], "+", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "theta", "]"}], "2"]}]}], "0"},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{"4", " ", "a", " ", "M", " ", "r", " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "theta", "]"}], "2"]}], 
        RowBox[{
         SuperscriptBox["a", "2"], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["r", "2"]}], "+", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "theta"}], "]"}]}]}]]}], "0", "0", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["r", "2"], "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "theta", "]"}], "2"]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "theta", "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["a", "2"], "+", 
             SuperscriptBox["r", "2"]}], ")"}], "2"], "-", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["a", "2"], "+", 
             RowBox[{"r", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}]}]}], ")"}],
            " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "theta", "]"}], "2"]}]}], ")"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          SuperscriptBox["r", "2"], "-", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "theta", "]"}], "2"]}]}], ")"}], "2"]]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.902915662870559*^9},
 CellLabel->
  "Out[27]//MatrixForm=",ExpressionUUID->"46fa979f-3f3e-4892-8c2c-\
d91784b50f07"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"test", "G", "numerically"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"num", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"r", "->", "1.0"}], ",", 
     RowBox[{"theta", "->", "0.2"}], ",", 
     RowBox[{"M", "->", "1"}], ",", 
     RowBox[{"a", "->", "0.5"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Evaluate", "[", 
   RowBox[{"grr", "/.", "num"}], "]"}], "//", "MatrixForm"}]}], "Input",
 CellLabel->"In[67]:=",ExpressionUUID->"166ebbb0-33a3-4512-8ec7-9da4feb23a6a"],

Cell[BoxData[
 TagBox[
  RowBox[{"-", "1.6535101656671476`"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[68]//MatrixForm= \
",ExpressionUUID->"f287e1fa-bc7d-4c44-9694-8532fca86683"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Metric Determinant", "Chapter",ExpressionUUID->"a7e0f0ee-0bf4-4b7e-876f-35045ab9584f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"determinant", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Det", "[", "G", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.9029156766994295`*^9, 3.9029157854952455`*^9, {3.902915982194337*^9, 
   3.9029159946431437`*^9}},ExpressionUUID->"adc90f0f-d4ba-4b5d-ab5e-\
e182f29d8ef9"],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"8", " ", 
     SuperscriptBox["r", "2"]}]], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["a", "6"], " ", 
       SuperscriptBox["defpar", "2"]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["a", "4"], " ", 
       SuperscriptBox["defpar", "2"], " ", "M", " ", "r"}], "+", 
      RowBox[{"3", " ", 
       SuperscriptBox["a", "4"], " ", 
       SuperscriptBox["r", "2"]}], "+", 
      RowBox[{"3", " ", 
       SuperscriptBox["a", "4"], " ", 
       SuperscriptBox["defpar", "2"], " ", 
       SuperscriptBox["r", "2"]}], "+", 
      RowBox[{"8", " ", 
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox["r", "4"]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox["defpar", "2"], " ", 
       SuperscriptBox["r", "4"]}], "+", 
      RowBox[{"8", " ", 
       SuperscriptBox["r", "6"]}], "+", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["a", "4"], " ", 
          SuperscriptBox["defpar", "2"]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["r", "4"]}], "+", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", "r", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", "r"}], "+", 
            RowBox[{
             SuperscriptBox["defpar", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}]}]}], 
           ")"}]}]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "theta"}], "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["a", "4"], " ", 
       SuperscriptBox["r", "2"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"4", " ", "theta"}], "]"}]}]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "theta", "]"}], "2"]}]}]}]], "Output",
 CellChangeTimes->{3.902915785827963*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"02674a98-3811-4218-aa7d-59630aa807d8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["a", "6"], " ", 
   SuperscriptBox["defpar", "2"]}], "+", 
  RowBox[{"2", " ", 
   SuperscriptBox["a", "4"], " ", 
   SuperscriptBox["defpar", "2"], " ", "M", " ", "r"}], "+", 
  RowBox[{"3", " ", 
   SuperscriptBox["a", "4"], " ", 
   SuperscriptBox["r", "2"]}], "+", 
  RowBox[{"3", " ", 
   SuperscriptBox["a", "4"], " ", 
   SuperscriptBox["defpar", "2"], " ", 
   SuperscriptBox["r", "2"]}], "+", 
  RowBox[{"8", " ", 
   SuperscriptBox["a", "2"], " ", 
   SuperscriptBox["r", "4"]}], "+", 
  RowBox[{"2", " ", 
   SuperscriptBox["a", "2"], " ", 
   SuperscriptBox["defpar", "2"], " ", 
   SuperscriptBox["r", "4"]}], "+", 
  RowBox[{"8", " ", 
   SuperscriptBox["r", "6"]}], "+", 
  RowBox[{
   SuperscriptBox["a", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["a", "4"], " ", 
      SuperscriptBox["defpar", "2"]}], "+", 
     RowBox[{"8", " ", 
      SuperscriptBox["r", "4"]}], "+", 
     RowBox[{
      SuperscriptBox["a", "2"], " ", "r", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"4", " ", "r"}], "+", 
        RowBox[{
         SuperscriptBox["defpar", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}]}]}], ")"}]}]}], 
    ")"}], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "theta"}], "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["a", "4"], " ", 
   SuperscriptBox["r", "2"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"4", " ", "theta"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9029158102018976`*^9, 3.902915817579677*^9}},
 NumberMarks->False,ExpressionUUID->"33cb4142-362e-40f9-b7e0-fafe8c0d73b8"],

Cell[BoxData[
 RowBox[{"8", " ", 
  SuperscriptBox["r", "2"]}]], "Output",
 CellChangeTimes->{3.902915796623124*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"1a34c19a-2858-4705-9683-79caa19e0ab7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Plot3D", "[", 
   RowBox[{
    RowBox[{"determinant", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"M", "->", "1"}], ",", " ", 
       RowBox[{"a", "->", 
        RowBox[{"-", "1"}]}], ",", " ", 
       RowBox[{"r", "->", "10000"}]}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"defpar", ",", 
      RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"theta", ",", " ", 
      RowBox[{"-", "Pi"}], ",", " ", "Pi"}], "}"}]}], "]"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"test", "determinant", "numerically"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.902915690269019*^9, 3.902915718708459*^9}, {
  3.902915996757547*^9, 3.902916185499637*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"74e744a1-cd25-4f61-a2f4-603cd79484cb"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJyNnXm4TlXY/03HPM/zXGgiIWNrUyQhEW+kcoRkiFKIFNJAQobMkpk4mTJk
2A+hcMzzUBElMpyTIUeH81rPvr9r7/091u/9+cd1fa77Wufe33Wve91r2Psp
07FXy87p0qRJMyNLmjTp7/5ffVHuvSkp5SI/jc5U+L8yWSIjCl16Z3//ryOR
xjlLjy1fxvAp3557XvOvdhc61XhsccPbfd6wmuaLs+Ub3PNEQcN/WpWxuOab
o+3kMfyPhx/Movl3UfuMhi9NWP7fvrt8ZZTfcMEfSJl+VfM00X9n14M/3/Zi
guYzPXvF9nO99h1uf4Pnj8P+LPD8d9j/sd7zOvy8Gz19HNZH9HRYT+j8SY4H
ax0ZERO5c+LY4GWRoj9CZ/Aje/K/pjl0Bl9V5+wzmkNn8MmlGlfXHDqDDxvo
3Kc5dAZ/97ldRTSHzuDdp17Oqzl0Bu/66pzcmkNntofO3D50Zn+gM/sPnfl5
oTPrA51ZT+jc8PPm7VZcTRv5/cWq2zqurm50Br+YNnOc5tAZfOwbEyZrDp3B
D44+/pnm0Bl82TtHBmoOncEfKjzybc2hM3iDATd7aA6dwa9NKd5dc+jM9tCZ
24fO7A90Zv+hMz8vdGZ9oDPrCZ0z5z17o+TaZHfrsKF/N/vdMTqDt9+65qjm
0Bk8Q/L+nzWHzuDrKu5bpzl0Bv/o2RXLNIfO4C91em+R5tAZvEGfcvM0h87g
tfsvm6M5dGZ76MztQ2f2Bzqz/9CZnxc6sz7QmfUM543rbtlcA5YFdQa/9dzS
GUGdwY99smNUUGfwDSt+HhLUGXz+4UX9gjqDT7rSu3dQZ/BRd4r2COoM/nn6
hd2COrN9OG/47Yfzhu9POG/4/ofzhv+84bzh6xPOG76e4Xi+6PbK0GVTbCBv
gE+Lq7MwNpA3wB8vtH18bCBvgDd4Iuew2EDeAN9QLlu/2EDeAJ//k9szNpA3
wFMqPdQ1NpA3wH9u0qJLbCBvsH04nv32w/Hs+xOOZ9//cDz7zxuOZ1+fcDz7
eoZ1PukW6NOoblxgHgQf021IybjAPAg+9FiLmLjAPAh+wV2ZsCQwD4LvKLHk
1JLAPAhe9mqtQ0sC8yD4FfXS7iWBeRD8sQx54pcE5kG2D+vstx/W2fcnrLPv
f1hn/3nDOvv6hHX29YTOaegfdGYOnZlDZ+bQmTl0Zg6dmUNnJtCZOXRmDp2Z
Q2fm0Jk5dGYOnS0ccaUs8aws8aws8aws8aws8aws8aws8aws8aws8aws8aws
8aws8aws8aws8aw4niWfKEt+Vpb8rCz5WVnys7LkZ2XJz8qSn5UlPytLflaW
/Kws+VlZ8rOy5Gdlyc+K87PMj8pSbyhLvaEs9Yay1BvKUm8oS72hLPWGstQb
ylJvKEu9oSz1hrLUG8pSbyhLvaHuXW8kK0v9rCz1s7LUz8pSPytL/aws9bOy
1M/KUj8rS/2sLPWzstTPylI/K0v9rCz1s+L6WdYvjmU96FjWg45lPehY1oOO
ZT3oWNaDjmU96FjWg45lPehY1oOOZT3oWNaDjmU96FjWgw6vB2U97lj2NxzL
/oZj2d9wLPsbjmV/w7HsbziW/Q3Hsr/hWPY3HMv+hmPZ33As+xuOZX/Dsexv
OLy/IftLjmW/zrHs1zmW/TrHsl/nWPbrHMt+nWPZr3Ms+3WOZb/OsezXOZb9
OseyX+dY9uscy36d0XPAe7luNh5bNjKv+eSKb7TJFKmQtYY76L7kzdAfvGej
9/ZoLvaOxd6x2EfKNznVrUzFNJHF8WrfT4fr/gju+ZPkxgwt2f+9H+ubfof9
G/3Pn9b22aoUHbOqZynD+3ecuSLI0c7wPr911u2U6VmgyolVRYx9898Spmh7
cNj3PbeojbZ/PPp38xn7B5589FNtDw77Xb8MbqLtp0T1z27s84yK7a/twWE/
uk1sfW2/JdovaY19msiQN7U9OOzXPd+0jrbfGO33P13Y3zj65RvaHhz2LffU
r6ntv/K4Yntwtv/B+7sO+wPO/ozxnsvh5wXn563q6eawnuCsZwmvXxzuL3Du
r0xevzscD+AcD4hbSxw6tjgEf/BW7NAAd5gjnr15Od6tfvb+D/oG4l+4Ag/X
RfFuk+LdRmmOeAa/Nq1e7D24Akc8w3786fueuQdX4Ihn2OdZ/lv1e3AFjniG
/ds5u1e4B1fgiGfYL7vxU4l7cAWOeIb93m43Ct+DK3DEM9sTN/aIZ/aHuPEH
8czPS9w8L+KZ9SRu9EQ8c38RN/2FeOZ4IG7iAfFsiUPn/4hDhTgM15k+p7yt
MF4ozzsYXzSOFMYL5W2FcUp53sG4prytkAcozzvIG5S3FfIM5XkHeYnytkIe
ozzvIO9R3lbIk5TnHeRVytsKeZjyvGPJ28qS54095W3jD+V54w/lbfO8lOfN
81LeNnpSnjd6Ut42/UV53vQX5W0TD5TnTTxQ3uY4dGxxCI66AnHOnOoix1IX
OZa6yNiH/cziFL+5oWOw7sL5KXHHws15UPP7N53W677wvJDsXo59Y6/m4fyf
7M4Yd32T5uE8n+y2X9d5lebhfJ7sPnxs7RLNw3k72c1xKXF+dH0ays/JbvKN
HHOj6/dQHvZ5ON/67YTzqv93w/nT9zOcJ/3nCudDXwfq3wj1r8N6Qmfe/4TO
zKEzc+jMHDozh87MoTNz6MwcOjOHzsyhM3PozBw6M6f5wqX5IpU9xbOyxLOy
xLOyxLOyxLOyxLOyxLOyxLOyxLOyxLOyxLOyxLOyxLPieOb5lOJZcTxz/qH1
mslj4fV1kjtg0fQ3o/NOaH2d5Fb95czLmofX10nuC2OrtdA8vL5Ocn/fPrqh
5uH1dZJ79KPr9TQPr6+T3JqRzrU096IF6+skN8OHpx7XPLy+9u3D62u//fD6
2vcnvL72/Q+vr/3nDa+vfX3C+5nxbpFchXtF69LQfma8+/MXE1/QPLyfGe+2
mfTXE5qH9zPj3W2PZHtE8/B+Zrxb8PmUMpqH9zPj3adSthTVHLqBv1CrfbQe
Du9n+vbh/Uy//fB+pu9PeD/T9z+8n+k/b3g/09eHdFMW3ZRFN2XRTVl0Uxbd
lEU3ZdFNWXRTFt2URTdl0U1ZdFOsG/KAZZwqyzhVlnGqLONUWcapsoxTZRmn
yjJOlWWcKss4VZZxqizj1OhT4nTOkT1PlIn8tffdTF9cuqUav9hqVr8R9X9s
kVJ4TUpKCcMfz5zrS8271M3/YvlnChteqf/OoZq/H82reQ0vseCzfpqXj+bz
LIYXmNSol+Yzon4mu+B5Gsd003x/9LkOG55zzZbXNV8V9T9Rgef+a1hXzatE
83Z6Bzzf0YY9NI+Jzhe5DC/yWaY+ml86nmfBqp4FDC97c/v7mh+dXjDz2PLF
DK9S8YvhmscuzbFyVc/ShqvCz0/WnHRzodtrnr3hsCc9Xeh50vu7huPvks4u
dP7H899w+E/6u9A/l6eD4dCB+sVFv9T29DQcelJ/ueivHV6/GI5+oX500Y9D
Pa6YU/+adkZ4f1fx36V+N34W9Z7L4eeieDA69Pd0c1g3ihOjc0evXxzuF4of
049NvX53uN8prkycFPfiyvk/4srEIcWPiVuKExPnFA9mXFC/m3FE/WvGHfWj
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
3aRHZsRH36MUncH/6N8j4q/3U98XhQ7gj+b/NXovDjqAr1xQfaHm0AH8x+pr
4nz71Pc8w/ntulu56z8zg/6Db1o7YWzQf/Aj6Tt9EvSf953C4/e6+8HXh7oH
/Qe/8djDvYL+gydGvnsn6D+3H9b/otsmyVkcG4hz8Nwb/pgcG4hz8BnPvTAi
NhDn4ClLRw6KDcQ5ePXTo/rEBuIcvN6pdj1iA3EOXjgu4fXYQJyD4z3ucP/6
9uH+9dsP96/vT7h/L7pplnn+I875eZuHzi98fRDnrGdY55PuN9lql40LzIPg
W29PyxYXmO/AP3qm180lgXkN/PjlpX8tCcxf4DsvxZ5cEpinwFs3GnpgSWA+
Au93M0/guwSRVN/ZCOt80u0v9mGd/fbDOvv+hHX2/Q/r7D9vWOeT7jbRJ6yz
ryd05nXNc5bzFDwXczwXc+pHZelHZelHZelHZelHZelHZelHZelHZelHZelH
ZelHZelHZelHZelHZelHxf0o40hZ8pKy5CVlyUvKkpeUJS8pS15SlrykLHlJ
WfKSsuQlZclLypKXlCUvKUteUpyXsK9imb+UZf5SlvlLWeYvZZm/lGX+Upb5
S917/kpWlvpBWeoHZakflKV+UJb6QVnqB2WpHxTXD3h/31JnOpY607HUmY6l
znQsdaZjqTMdS53pWOpMx1JnOpY607HUmY6lznQsdaZjqTMdrjPx/j6vQ8F5
vQnO60pwXj+a7wPQOhGc14PgvO7j7yHQOs7hdRw4r9fYH1p/Obz+4uel9ZTD
6ynWEzrjPP0HWWfRet/Beo3W9Q7WfbR+d7B+pHW6g3UorccdrMdp3e3wepm/
h0Dra2NP62UH62VaFxt/aP1r/Kd1rnleWs8afaDnrukZv193OyYyIrnBnyf3
FzBxW+CR36vM7J0xsqRa93+H5c5v4vbljRsWDzuTMTKhVLNNb67JbeJ2rnz3
INdU/X2MrCZuL/36zpxm2zNF0pVrd2BY7gwmbnG/5WaS/v7Grc3Q84OUB6cV
/C5z5E6duXfj88Jm6LkN33fttv2/R4b6esL/GzvHJEzpWsjELfwfnF7/3fwm
buF/lraNV2v/oSe+21BK6e94ZDVxe1n8f/AFrUMGE7fw/+VHCrym/YeeI4s9
cHhil3SRsXubnR14+DGj58FvY1q+fyxdpHL72CwTrj9q9Cxe9/SuDk3TR4am
vFstLn8Vo2en6H5X+sis9yttH/X6Q0bPxe0nba1UNUNka80vHt00t6LR8/rF
PvVzzs0Q+bd2pZlXz5Q3eaDeoOc2/FMoJrJtRK5895ctY/LAx7IvMYjyAPz/
74tf52v/oSf8/+W/QufG3/UfesL/1//aV0H7Dz07i//r4x7Yr/2HnkvE//yT
D7fS/kNP+N9x4tr92n/kgbrif9VlfzTV/kPniVWnXj4347Y79Yvl7cc95c/L
97dq+efSYXfcJx+ePWtZM2V0XtUny6/vdUtxT9QpMbZu3ieMzuXkvciH5b1d
6DBB2h+7L76Sbh863Cftv/rUD7G6feiA9p/fW7aPbh86cPvw34vPG+6RqjO/
7FijvvF/Lp1TwJ98Yl+95ZsvaXv4M1vsj8t5Adr3dLjsJg++eqf2h4+b9j1/
EtzbLWfVyf90LaPPim4TO17IkejumNS+/6WcdYw+DWQ/do2cJ8KfctJ+y9i6
K3X78KestJ/YblSMbh/6oP0brau8pNuHPtw+/PfaOeWuLLV8evm7/Q7/PfvT
7pGK0wr+czdO4H9sNN7OuG2b7Rnh3o0r+D8kGud/uIs+rpU8MjCOvonqds4t
3rlTjSV34xbjaHM0z5x3Vw+vfmXc3TjHODoTPbe64J586NOFA+6OC4yj9LIe
/5Hq89Li/8w7J17T/kMfR/wvszfb2cS7/kOfDuJ/uisfd9X+Q5+h4v/SVjWv
jgyMo9nif5OBmZ/U/mMc/Sj+5/zrgzx6nGIc/S7+v9Tjxh/af+h8Oo/2f7Gb
XFTfb4zfDJ2v5fHuDRaR+5N4rtViXzN67zR+M57rlNi/I/dX0X581J9jqsYH
P945FphfRkWf65DqVnrv7pg/cpt+bB7VZ5+aM/7nVq9dzmT6sXhU53jVWL4j
AX/2S/txh1ut1+3Dny+l/X43W8fp9qEz2u+6sqTS7UNnbh/+X/B0U51FN/i/
w9NZFRSd4f+3Xr+oltIv8P9zrx/VZulHxGF3r99VIel3xGETL05UDYkTxGEl
L67U9xJXiMO8ss5tTOvxi+L/nxK30Cde/N8scQ59Fov/98u4gD4jxP/1Mo4Q
h2+I/2/IuEMcPiP+n5Nxijh8QPzfJuMaOv8bzf/XVNqpmQoF8/nr3rmPqt88
c5pgPj8SnY/+UaVeq3e0TiCfN5bz/Qjlq5vS/tHfypwdG8jnXaV9t0spd2kg
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
kg8jnA8xj/C+tPzdCI9HfB8e+1oxQ0v2j57LeP5HeFxnl99zgf3wPr911vYf
eDpEOD+Uld9ngX3fc4vaaPvxnp4RzjM15RwE9jgnmia/kwI+uk1sfc0/jPqf
zrTzcLqSXXU72+R3T2C/7vmmdaK/sxxt56LJe+2Kq47RvCS/YwL7lnvq19T2
33rxoFLlSfldErZPqRyNK8X5do38zgj7c8iLT4fz9ij53RB+3kNenDuc/x+V
8w7Wrbj8fgfrv2hikfInVpU07Zz8qcy3up2M8nsc3L/PPpyrwYkafj6vXLfp
9kD8OBw/iEPeL0XcYp/kc8lXVyTPg1eQPC/5LcL5DXU777d86eVJw1dInhwr
nPNnTS/fGvuqkm9rC+c83NzL28Y+s+TtFsI5n/eQ+QX2NWV+eUTmF/A2Mr+U
ye7NL+A7ZX4Z4s07ivl9ck4HPhHfyRF7+HNC7L3fB0lS/HdzC+f5zvt9kMwO
+/+KcJ43i3nzrLHvLfNsEeE8/1aT+Y71Hy3zHfcj6kCOH8Qb76cNlPy2Xe51
ID4XSD7EOvE3yYfNvDg3/EGJ8xyS99AOxoXkeWM/TPLkUm98GX5Uxlc5yYdo
B+NR5hFj31/y5zY5XwY/KO9d1pI8iXYw3sdKXoX9Wsmr0yV/wh755KzMj7Bf
JfnnJ8mfsEe+GiD5FvaVJN8Wl/kUfLrkvZ2SV9EO8uR4ycOwbyN5+JzMv+D7
JN8Ol3zL7WyU/Mz2Pbz2DW8t7a+WPMzPldnzX7H/vb3ndfh5v5D8zHoel3zO
ejaSc21+37mK5G3uxyOS52FfQvJ8McnnHD9yD8HYH5I46S/1CcdVjOR5jufF
Mi9w3D4q9QzH+XuS/3l8NZX5gseRjDuHxx3yOe/bxEj+x7r4K6lzEmS+AH9H
3ttFO7yOlnYcbgf1D+a1BT327tJ/F79bB77v1sU4zfF7c+BN3qo8QXP8Thx4
zr0TB2uO33cDL1fo/rf8dVBawz9pdLyL5vg9NfAar6yMxjN+B405fr+M28Hv
jvHfxe+FsZ/4nS9+Lvw+F+uAfMvnyKgHWE/ojH379rlHNdP7+dAZvMmBztU1
h87geZ59qozm0Bk8rl+lPJpDZ/D72xaI0Rw6g797JdNtfX4BncGn1U6bpDl0
Zg6duR3ozH8XOrOf0JmfCzqzDtCTdRtgmdfAMY7mUDzzeAeH/S6Kc84z4LBv
SPHPeQwc9lloXHD+BId9KRovnLfBYT+UxlGq+UI47KvS+GJ7cLb/wTKPgLM/
YyzzBTg/b1XLvADOepawzAvg3F+ZLPkfnOMB4x32qOcHWPI/OMch9oexLhiw
aPqbUZ1lfxi86i9nXo7OR7I/DP7C2GotovOd7A+D/759dEPNsT8MfvSj6/U0
x/4weM1I58D7sGfXg+PeL/aH2R77w9w+9ofZH+wPs//YH+bnxf4w6wPdUN/+
Sefy4BmLh8/lwd+nc3nwpnQuD/42ncuDJ9C5vFlP0bk820M3bh+6sT/Qjf2H
bvy80I31gW6IT443cI43cI43cI43cI43cI43cI43todu3D50Y3+gG/sP3fh5
oRvr855lfslimUfiLLptseg20ZL/l1v03GTJ/z9YdF5myf/zcz5X1n05IZX+
sy35f4Mlz6+z6D/Pon8pS34eY+mXLJb8vMHSX64lzsdb4nyRpb8ilv5abOmX
eZa4XWCJW9ei2yKLbuMt+rxH9WSJQieK6XsgWameLNHkjQyaL6H7M2ufzpaY
4y7/ke7PJOTadFrzZXR/ZsusEYc1n0R1JvhauldTLU3XPZpvpvoT/M6Evitm
jLxk7tuoim3jNV9JdSn4TKpLzxV9ZZfm66kurXS0736f+/dwMneYfULz+XQP
Z8jyM39p/iXdw5m05/FbmpekehUccQj+zOqvc2mdM1MdC16N7u189UaxSpoP
pPoWXOxNvKHeALe0k4rj98qZY7ywn9kpfsAn0L0s6FCW1ing31K8QeeatH4B
30RxiP5aQnGI/v2Z4gTxMJLiBPEzl+5xIQ7XUPyAz6f7XYjzUbTeAd9I8YZx
9Citg8AXUhxiPI6jOMT4fY/iBON9oKX+rGapV/H7ttwOfseW/y7Ol9lPnC/z
c+F8mfXB78yyzvg9We4v/G4s9y9+H5bjAefRHD/4vVeON5xHgyNuce4GjvjH
uRs4xlF1yzjF/iru8S6Wcy7ZFzI86/2Pptv9hL8/AD50bEK+6HftZH8VPJ+c
o30n+6vgvVvuOqPfT8lmOZ8Ch323Mjmu63YGyb4r+AI5v9si+67g7eU97jKW
8yxw2A+Z9NwJ3c442Y81f1fODR+3nHOBw37Lv6u3afvTsk8Lvin3ivnanymW
czFw2NdSjVZHn1f2b8E/fOCJOM0Ly/4teJ3XYmbo9rG+5nMrcNiffPNW9Px0
luzrgu9+6tUFmv8i+7rgtdXHk3X7WI/zORq4iZ9PDkbPYZfLfi94Uzmf7Sf7
veDunKpTdPtYv3P74Nx+etkHBr8l58J9ZB8YfMe4HDN1+1jvsz7grM8R2R8G
Pyzn0Y1lfxj8RXnPHfsD3L/g3L+HZd8Y/JScg1e1nA+Cc7y9J/vG/v3/7/Zq
f0pYzhPBOf6/lf1kM64v10+sE7g3Al7uO+dv3X4my/kjOI9f237CBMt+AuZl
Xo9j/uX1O+ZfXu/PtuwPYN5ke8yP3D7mQfZnnGV/AOew0KFwxx65gvvq4Nua
pWQN5NVU57PgnG9t77mgjjL7JBcqDAq28/97/ot5hNupTnUd7nXj3gLfl8B8
Af6J+A8/zfoO7cs8wvcxMC+Yex0SV4NlXuB7Hcjz4B9LnH8leR68F+V58O0y
vpCfwevJ+B0q+Rn8I8nPyLfgpySfrJR8C75f8i3yp9FN8ttMyZ98vwX5kO1v
yX0GvieD/Mb+7Jf8xvdtkK/4eQ9IvgI/S/mKdUOeYf0XSJ4x8SB5BnmD+7eJ
jCPw4jKOEM8cV695dVGE6yLvflGxCNdR/3h1l+Gou3J5dZrhqNNqy3u+XNft
kHtBXAcO9erGVHX+CK/OTFXne+f+WUz9hrq0v1fHGo461jv3L2w46t6moe+7
+nUy7ikZLnU1xjuPR9u9o6yW+m2JJW//aMnbkyx10TJLPt9sqXNWW/aN11jq
Fm9/6UKq/eRpljpkvaV+WG+ZL+Zb5ouSlnn5S8s8ktkyz9r2n239hfuWmEcy
l3txq57Hcd8S/NH2ny/X/HW5DwN+uuTFOZrjvqWp87sPmKb5AblvCR7v1IjW
jVXk3gt4Nnk/HfctwQv8NyBOc9y3BP/9xkVXc9y3BK/+/sjD0bpL7p+AZ/+8
7T/R+kTOkcG7lnshn55ncX8J9+4+lPPoh8VP8CtyvxrrUNzvfVTu9WEdCv6g
/C7MGlkPgn8r9wMflfUg+DH5HRypEyJ8XytO1k187wvrHfCjcn9gsNTV4G3l
HsW7Ug/zvbtnpY4Fby73HOQ+s3mPMknubXaUvAo+Qu55Hpe8Ct5Z7oUmSF4F
/1zukeaQvAp+O8m7d1pT8ir4Wvk9rImSP8Hzyv3VMZI/wePkvmtxyZ/gE+V+
7HuSP8F3yH3aTpI/wZ+W+7f4/gB4Lvl9scoSJzi/mC/3uCSvmnu5D8q96HUS
D+Db5B51VYkH8Ig8L+KB5zu572H4pzJvjpR+B98ndUV/6XeuT9C/5v6q3FdH
/5r3WeR+O/oXvLzch0f/go+X+/PoX/ABct9+ivQj+AW5n49+BJ8n9/nRj+b9
F7n/j3407cv7AuhH8InyfgHuGfJ7HI/LvUF+76OZ3A8EHy3vQXh1RW7Db8t7
JYnefXLDe8p7FmPlXh94R3kvo5jc3+P3WXB/j99nKS738cD/k7+bycvnqd5n
SfTu2xteQZ7rknw3A/ltiOS91vj+FeUBV+4pgR+TPHNN7vPjXt9fcp8/q8wv
4GnkPn9pmV/4nmEn0RO8hty37yKc7+H/IzrDfr3c2/9XOOzjhdeW767AfpKM
06eEw36h8L/kvQDYb5B2XpV5iv18RuYpvl+aUfoFPK3okEE4/m4e4QnSX7A/
L3peFs7vTeD7J7CvKPdvLwqHfU3hJ+W+Pd9P+0LuyfP9w02W86lJlvOpUpb7
JzUs90ymWM6hZlnOocZZ7mM8Zrl3EWc5Z/x2kf63P9V5oms5p9tE5w7FpU6e
SOcLxaWuLk3nC6jDa9A5whWp26fSPj/WC7NpPx/ri7G0n4/1yGO0b/+hrF+m
0fkX7LfRORfa/47Oxf4UfzIezDt5858HU51/FafzJjxvRjpXwrrDpXMo6HlC
4tPs1z09apWu31pJXgJ/Rb6/N0riFrx7zqbrtP0yS/3fprX+90uqOv9FaZ9/
XxJ5D7ykfFfNtn810bJ/Vdqy/1zDsp883bJPNduyTzXWst/4mGX/EO9hQbfX
+rT8Ret2UfKe2Qf+rMas4Pe4MF8s37GrXPR9T6k/wafdvy2f/15kPsNHNJua
UXN8Rwt8kGqWrOc1fC8L/J3kE9c0x/eywN8c9nTo9wr5PUd8twr8xv7V1zXH
96nAU+asu+3b5zM8V4NpmbWf+D4VeJlFbQtONe2UMLzmL1fv1/yyZT6FPqjz
949oe9t/Tz+f4U+f6nt1vFlH5DB8ZPu1f2sOfcC/Tin9Z/B3M8EHb18SeB85
Yr6DVFneR4YO4BfTtL6kOXQA3/vQ6uuaQwfwIR8+kWZCoB4GT5t0IXvwdzDB
m09eX2xC4Lm4rthkqSvwXKi3pw+5dmFc4Ln4Oy34u+C/pf2xzP/rPUTEM3jR
0TUuHQv0F3jfa86v/ndC8hneLO73fdH3R+S5wKetL/Zz9H1A6S/wLqUuRoK/
48b1BuKW7dFf3D76i/2BnuD9xH/0F3gxed7LljoBOpj3+wr1iwnGLXjvnuP/
GxfoX/D7Lhy+Oi4Qt+Z7FF88cTn4+93gU/5nZ6h/+Tsb0AF88Ki3r48LxC14
wtqDt8cF4hY8V/b2mYPrOPBfh2UuEPw9bvCXyh8vFxyPPC9ssswLeC6sO4Zd
PRwaj/x9APxd8D195xaZELDn9QK+78f7EohzM36lnecs+xJoB3yE+Ik45H0J
9Dvmha2yrwv9mcMfjMfWoif8AT8i+iPewLNIf4W/h3nevSD9i34BHyDxgHjj
fQM8L/h4iTc8r/meksQn4g28lMRz+HuY593uEv+IB7PvIePFtm8AHVC3Z6X8
A96F8o/5DhLlH/CRlH/AW1P+4XUQdDDvl1H+4fahA/sDHcBfp/wDno3yD69f
ED8Yj+ckn6MfwefIvAD/ef8EumFdk1XuXcN/5vi7GI/PyvyF/gJPvunNd+gv
8EEyP+LvgsfLfIr+Aj8v8y+eC3ygzON4LvCpMu+jX8A/kzoBzwX+pNQV6Bfw
3VKH4LmQZ6pIPYPnAi8q9Q+eCzyT1Et4LvAkqa8Qh+AXpR7D84J3kboOz2v2
T6QOxPOa3/uTuhHPCz5M6kw8L/gEqUsRh+DfSh17mfaBh9LvRKM+Sbd2RP+j
H9czHHU1/24U7N8q9s1HWePrGW7s6fekeP8WHPb8O1Ncz0Nn8x7Qmz0b6r+L
8Q6eN/O2Ytp/6A+eWzjmHfAu8r0g2OPv8u9Mwf4Z+bvgsOffn+I6EBz2/LtU
/LzoR7TztuiMfAKeQfoLz8Xfo8Nz8f4t+hf7APw7Vsgbt9d47aN/jb30Lzjs
e4if6F/Yo38303ujB+h3XXl/A/1u3hOhfgfPQf2OdtCP4CYfUjyAd5R4QP+i
HfQvOOyfEn/Qv7BH/4LD/hn6XVR+3k30viTeq0U8gPekeABPWRMev8gDA0Pv
IaZ+HxD+MA///qa/rxL+/U1/XyX8+5v+Pkn49zf9fRL4z3nmsuW9e/Qjv1eO
fuT3PuA/9wv8B+ffpwPn36fj/TQ8Lzj/fhw4/36cbdzxfhHGl+GiG3Tg/TTE
J/dL+Pdl/H4J/76Mv18X/n0Zv9/Dvy/j779BZ96/gs7gaee2/C64jjD3hZym
ge/BRlJ9DxZ6gid/kOFy8PcpOK/i74Jz/4Jz//K+GfoXnPsXnPsXfr4w/PtM
wboL66klSTHbjwTyKvjbey7vzhJfz4xT8J9l3YHnAt9dbt2YLIF8CH6hSf0e
RwL5EPwv4Xhe8EHyHULED3i8tI9+Z3+gA/sPHcC/k+cN/06Bv+8Kf8Cx7xr+
nYLU4wI6n/999Cm9j7fZcj8WOpj7vfTdeHNvM2fZbzRH/PO9x/8FTV4m7w==

    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1:eJxFnHccl9P7xj/Pfj6UyCiUNtlEspUGyipZpVTKaIfSIEpFw6oUZe8V2aOs
khW+kVlmdhFCNr/r7Tpevz/O574/5znPeea5z31f93WeRn2GdBkcVyqVjnml
kkieW61UNssqlbvKSiUuKpX9o0rlYMlXtbG3tu8q+bpKX+l7SP6g/XZTm73U
5ifpLaTvLT3T/v3UcSq5k/rcKK1URkjPtO1AtWknuVbtd5G+p/RX1Fcv9bmL
5KP631T7tlD7vtp3svZNVfeytvVUm50kT1H9RNVHqq+pthepnxoqj6puI8mj
Jd9Uu9PUfi/JUu1aq/4QyTf0v5/q95R8SaWH9B2pU59TtV+hNkv1/2TV7yz5
ospJ0neQfFz3po+O113yMbXdWH12lZykc62vNi+o/la1ayj9T7Vroz4f0f8T
tf1eyeaqzyTv575Jf0/t75O+q/R3pHdS+yc4ntrP4/6o/l3Vd1D9Y6rvpvrD
pD8uvbv07bVtis7hcZ3DRfrfQu1Xqu4Z7bu39E+kX6z6faSvkv6g6neXvkJ6
c13nKdp3juQOKqdKv05ye5W+0q+RvFvtN1b7BWp/m47ZSPpfuq6a3EfpZ2h7
M+m91H6W5FP630r1H6v9Qul7Sf9IehOd8xrtP0Dn0lTtTlb7KyWXq+5UtWkp
uaH6naT6DVQ+VylUMpUxaneH5ADJc1XulD4wvCP3qzyk/Z/VMepIDtExt9K9
eE/6perzBW0/WOUo/e+sc/hIdWfoHBar7kCVI1S/RLK1ypHSz1bfD0i/VfpD
sfWDQt2DQX9Y+++h4w1UfyeqnKPjfa/jdpM+SvqP0m+Ovf9/+6LfpHKH9mtH
vWR9yXtVhnMs9bm76gaoj88lk8hjp1A5TW1KyemqP4f3VrKB6u5TGaH/R3Me
Ou5bOu5dvCtcs+TdKodKb4+u+7WZ9B14D6XXlb6T9Nuk15C+rfR7pG8hfUfp
D0ivJ30X6T3U/xj1v179P6K+unDfJKuSE3Wepcpbuq+n61xaST6mbV217WjJ
t5AqxzGW9H+q2j6hvuar/61Uv7P6v0X6BtKbcQ5q01H6oZKvSx6u0lX7Luf5
qBwr/UttO4CxxnuhspHqt9O+z+v8DlXfg3S+N6o+555LLlJ9G9VPVv2j0vdg
vEp/mHEnfaL056S3lz5F+pO6hoPU/2aSddTHNJ3zFioHsY/qTuBYaltLdV0k
X9a+o9R+U8ln9H8b1Z8q+br+n6v643UO/5M+Rvpx2FLpo6UfK72W+rpaegve
W+nXS99b+kLpc3nW0ifouEfpmtepfUvJK9T/s+r/AW07Xuf3i+rnSz9O+nrp
n+kcp2jfI7Bdarep2p8geaH6OUT7f6w2n2rbZLU5XPJJHesm6fupj3Fq00Zt
3lWbd/S/u/Ybqrqt1fel6mcrladVV0+yj+QLKptIP05ymUoj6f0l/6fSQPrp
3A/1f6P631f9bSJ9DnOH9KN1jAvU5k/uj+SFKn9r273a53fOR/LGzGP1eskz
JFcxLlReV5mgUlF5KPU72FHy4dT2o5PkYsnzVNap2X36/6fkAZK/qZyv+nsk
/0h9DvM4Z+Y7HWeurncDnedstd9d5/mN7tEVPC/Jmqq/Svpuqr8vvKPzJOup
/gbV76P6r9VPR9Vdp36OKXxd/0g+nHksdJK8PbNdOkCys7aNU5u/JLuojOc+
ILV/O21/X/oH6vdC9d9T+ms61/pq01eyNvdd9ZN0bjV0DhH3Sm0OVfv5qv9H
clXuerZfq23/aN8lkptwzWozUftepf+/qX6R5FyVv6Q/J3m1yh/SF0t2UD/3
qv1vkg/rfxP1ubv63F/nOVt9dJb+rbadqX6HqW4vlfrcX9W3Uf2d2vcbxqL6
a4Yd1f/W+n+H5NeSmzJmpF+kvg7Glkk/S3UVHWuC5HD1953qR0g/U/oBKg+p
7fHq/xCeB3MufozaX4y/oe2xzrGdjtVWpZbqXlWbC7VPXenvSJ8m/TK1/1bb
F0pWVf+i6s9T/d/q633VX6z6K1S+k/4ktkptXlKbsWozQ/9/UP1TkpeofI19
k3yPsaQ2J0lfKX289B7St9T5XKI2dVUu1f81kgskD1Kb29XmC8mvVN5U/XjV
b4h9Uf35OtbG0l+TPkH6Fth76VOwUdLflj5V+mzt8wv2QfJz9bNc+jjphdo8
rzZj8IUYt/h60teozVuMPZ6z9JXSL5L+q/QV0idhR9V+idqPVvuFKgdi6yT3
1n1/XNfTqvTcfavKwIrn56ti25Txen9nSe+TWM6ObQuYz9H3YYzqOdVhjird
nn3H6ZgNsY3Sb8ttoyZo29+S16hujsrN6mcr1V2tPl5W+7sib6P+Iv0/QP8/
lLxb8gbV36L6c3SsDRl/6uciyZmqO1Hntj6x7T05cd/0s5/2O405Q3UX6BzO
ll7gB2nfs6Rn+HrSL0zd9oPUx7kuHKsx40367dp3cubzulhy82qYL7X9dOkL
pE9Qm3OwGWozQnK26neQfEBt+kierX56S56UeL5Av0ptdsGn4z4x3qQ/whyi
czmLOREboboR0ntovzNj90P9TLX/TXW36rhjpTdUu3tLt2FfbNxpqpuGf5G4
j3NiH3uq6q+U7Kb6Ptp3ta77Fu17tuovU/0xiY87Uu0HMe9In6H6E/D1pI9W
fU/pN+k8zo09z90YuT1zA9vHBJ169B15hpHPYXvJzarBv9dxL+A5qv58HeuX
xHa4l+QlavOj5GC1uaL0HLhG8kldcw+1/0Pv9mWl567VkpeUns+/lmwUnl3j
YNN21jH3UPu3iFXwT1Q/Tf2vU/+DpD+rNifHtuFPS+8Ze167N3ccRDw0Ve27
6Vwr0mdUfa5DpQ8hrsD31LF75bYt5zPPlJ4/v5dswhyqfppKzipt+78rPUdv
Htmnbcd7WvGc3Tj4JP25luBv4BfMKT0//1Dalu6qfVvi9+n/RPVfp7T9ZOy0
lZyuuhmx7+ntkfVWkcfvzDCWx+qaLpd+HmND9ZdJb4l9i63/N66QozM/G/qj
/RT8K5U9eM6ZddqMDGOBMfFT4neBd5hnzTn1Ttz/5eFYm+m8x0nfXLKuymTp
W5aeOxibbbCL+r86xCC/Jj53+iEuuVx6V8nV6v8l7XuI2qyV3p77pn0/KeyX
foqNzxxXdCD+CnZ+YOl3m/d5iO7vHD3fW/T/edVvqnIe9lBt95X+BHavDNux
V/gCan8lcVtp//1VlS7Eh4X/ryzsy/9P5RjVLy0cv7wa3kliinfwE0K7j3gP
dT0d1LauZOOqfT7eh6ZV+zScc0Pp/XS+s6U/lfh660huhe+i+kuZ31UWYA8l
t8QXVf200vehtdq/oWPtWPW8OJz3TfoZ0q/m/lQ935wlvXnV89CZ0rerel4Z
Jr2B9N7Sr2QsSl8l/XpiE/X/Ymyf7ATVf4Z9Le2LzsOW6di1sK8qg6VvQnzF
/cf3Vftrtd+S0j783SpnEhNmts2XhPjlFpUBFWMIt2GviMX0nE6Q/quuq7FK
D70/0wvHccRwxIaHxb4n7Sqe0+/BbuJP67hz1fdzpd+lNqp7TPqjpX29supn
tVSls7YdEvt9aCt9vto0w89Vm/ax59aDVX+56oZKNpdsi68l+Sw2TXKY6neS
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
mtuXAFMDc/tE/y9Sm1m55ybsGLmi47DjvGPatqP2bcr9KuxvcNzaKrvof/PI
+DBzHHgcxx5C7KuyLfsXPs7QwnUDY/f1j87pUeyz5KeZ52ruG3Mr94RczoeZ
x9qFuXFZsFqw2VTX+7Tqh2vfgwrXgfUdUBgHIl44UPrekbF35g7wGbZNDe8w
7zI5aeZScFTy9vdX/B62CfjMeZLvZx4v49Qm07ZnpI/QcVtr276RcxkP6H89
1f8WO0eJjd9Ocj6Yhep/jp3fZG4hL/1TZJ383f3Mc2rzi9o8mDhf/0dsXwLM
EYxxN2LjyPmIDzLbpPG585XMadsWzv/y7MiTf5bZz2W+7h8759hY2/6XGKdp
nNi/Zz4FV8fvx4cHV8cG4gP8VLH9wV/6Hj8kdZ7tZMk7tP+mqvucOVl6bemf
Bjv3ufTPKs6Fg7lPLpwjB5sjZzGoMCY+RfK1xHhSI8m3VU5kXCT21Tju74V9
Gnyb3/BnUt+zk1LHMNjAiYV9FHwVsBF8NcYL+ceXdP2Hqe1gcNncY2QDybdV
uql+SNV+OWOKHGW/EENNoG+dRw21Xw9OI30L6WvAVBLn9NeCCyT/QnmV1cTt
yb8QauUb6fdJ31L6j/h90qvMIdwrHXMt4yk17wH/DoydvBU+EXwHfCj0hirP
ZD7uYOZkdfIAGJ8OUi3sWzGWb1T/G0hfF9sHxTcgR3OL6mti81V/p/TNpH8p
/S7pm0v/mhgOv585Orafir9KzuXqxLybVaqfKwV4+IvYMQn+ALmba1Svw1e+
Uv0cYgOeu/SrEs+DH+vnydQ5pR6SHQrzDh6R/DDEsMSy+N6deXYV4yXEs2Af
xDLMg3BZvog8T5JPJS+Pvk1hjJd3eEVqHgRYGHPPytRjHex9TMB/30udl2NO
ZG4EayGeBbcBJ3g4YAUZ2EZkHARc5H3J6Ylxjo+kX5kY5/hQ+szEOMoH0mdI
X6rr6S79Rcmmqt+I+Tp2fp45mrn6C+6ZSoOKeUfYok65Y8OOKqv1/x793wb7
JvlpZF8bzgn8AfT64d2mjmOtLpybBt/7tnBOGYyRmIJYm//wd4gtiKM307kt
kj4qcVxDfM3+fcP1w/OoV9j+Ezt3UPudGDtqf6D0HaSXXEvh53ZgabwHn2cW
z7/0vJeX5gS1Cv4L8RoxO1woclnYAews2BX5MPAr8EbaNCrMMyGv/oLO4f3U
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
BL5UmQ==
            "]], Polygon3DBox[CompressedData["
1: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
2Z5fr/exrWibXJO5o/Ymai8X5tfdKveqbYvuH6P+R6n9XrWPEe4vfLTwfcLj
hAewP2Ej1f8glW/x9dgTmDsqXwvfqfHuCL72hawXtd8j3Br/Dl9NpTFfPcyn
ZcKvCU+KbJ/uUrkz7PUX6f6rdf/dwi1V/sL3Er5L9easAeGZwt+rvidzQPXN
id9/C93fVfdvEq7PehU+Wvgqjb+e31+f10b4Sn5j4anCR4TP+1hjPahr56h+
sz7j+mD78d/4/I/U/oCuDWevTD0+QcEHaj8v9Xz5tmT/f50+X/8UblX7m/jr
at9L+LOS/elLhOsK/8t8xn7xHYr+jUeqPjr1/N9RcnwwTKWf8P4arxL+u9qr
Cm8vOZ4ZIVwZf63k+GC2xvhR41VUqav6l4nffxe9j566/xPhBsKH4zcJX0ef
on28/VSfrHKb6g1VvtLY41L3L+rzN2r8dsH+XKdx5rK/4ZMWPSdHqD5S7VVU
31ZyvHNuavv3RcnxE/Njk/o/xB6r+hi111N9V8n28UyVE4Ub6PP20vhDc8eG
9YUrCu+le47T/bP1/J+q7VE9x3slv6MX2dN1/Xm1/yK8XPU91b5VOFd5TPiY
1P4BvsRpGq+Lxng5xD/b1XeFygcl77EvabxvE/tqnfTv5DLb2/XsR7r2va7t
1DjPauzDhG+MfY22rsRZ6t81tf+BbzZYuGNqf53Y5sQyr6d3df89unaG6l1S
+ycl9R9YZjuOPeedvBB5/9ws3EP4F+Iv1pTwqRrjXt3/r+57k/VX8J7I7/mO
8N34LKpfqfK+8HLhM1Xvio8f/M1vNN7dKq+UbKPY39l/Xw/+Ku+C/eA93b9M
eKjqV6l8UPQeMkz1ovpsEC4xp2P7E2/q/qPU/p3ajhV+P/jfPwn/rj4vqu9v
wveq3iHxXt872MhVuZ+to65P0vt4NfF6ujvy+nleeDfhJZH9gYF6f+8KV9FY
w9T/jcTzcXmYv7cJP1eyzcFfuQz7pPplqjfD/1L72uDPV9e1zol9K2x+HeHX
E6+3ZWH9X67yovDlwocSTwovV//B+k73MVcT+yInB5uNv9VPuL3wMao/n9t2
P6DnPbbMdhJ7ic3FfvLOeHdH698p2G/9+3R4f/uovVNq/5zY7yS1v4CPgv0U
Pk64Q+r4gli7r/CLun934Tsi+1e9EvuG/YPP0i73b3Efa0X930y839wb7Fv7
3L7I/WrvrvYjE/uKfYKPsUvX1+u7HyE8T/XG2Bu1D2EPzbyOWc/Hljyfm6n9
IdWHqX2F2rdovBZqX6W2LmXe91jbvUpej5+pvZXwk6r3KPM+wdo4vuT1/60+
c2XYj84RXprblnys60PU/47ctmmT8OnC2/XvirAfDec3ZE8hf6Brj+t5qunz
fla9sspT6jtH13YUHd/UIz5L/N3fDP7hCSoVw36faPy+whWEt5BTCvHn5KJ/
o3XEamqfUPTcv0btT+JDFL13XV3m/Mylwj+o/2Pq30/t1YJ9yNR+k9p3Fh2f
1ld9rp7n8bCfVdEzzdW1X4uOsRuovoBnZq9XaaT6vur/i+pVVVbrM9fl/qy7
VT9K49+s9lVhf6iq8T4Vbqn6E6p3U/vtuX2Dd9X/ZOKT3L7BO8L9hC/NbLs/
Ej61zP75RyEe/ZlYO3Os96HaT1H7R7rWTG0rmdvCX+j6A2G/ORMfTfgZcgkF
24Ab1H+pxusQfBrinU3C3dW+U23HCW8M63mH8Ffq82DY/4ZF7kPfAcSdZR4P
/+gOXZuh+ujMtnCD7jtB7Yflzs3dIdxe+PDcsdOdwh3JB+aOre4SPlL4YOH7
8XfZD8nNCN8nfBpzTvi8zLm/t9W/j/p/oM88hN+atSjcEB9J/U/BRqhvA/wt
1ivPSD4M/0l4gPBdmd8p77an/r2S/Ir+bSq8QuN1KHN+j/k5T7htmfORzKfb
hCPhVqlj69+EZwm30XO9VvScZY/6U+UV1XurVFCfVPd/qPooldvVVjHy+uSe
v4XbkSNSfUrRexL7BvsHY/wVe59hv3lJ+A/Vf9bnbyQ+TOxPLo69lvExcvb+
yLaNMf9hrNj39sInjOyPLFP9E3IHzDf9+63wTSovkA9W+6F6X23U91LsSey1
wxqqrvGfUHtjtR+h9nG8n9i+ET7SHtiO2L41PnZF4T0iz8W1wjvUtkr3H6j7
W+v6WPLTib/PSJXb1F5OeIvqF6ssZezMeLfE/vixurZdeI7K86ovie0b4iOW
qc8zrBeN3xbbVWb/cbnaNqvfJcKvxV7rrPn9Ev9erNdJ4X3/mvr3yhL724ti
rwV8ghK2hTWFr41/LbxGeAb2WaUmuQ3huarvhU+i+lsqi4RrC5+F76FyC32F
z4j9XDwfOZqrVY/1vO2Fp4V4pqnm74Nqu0V4BPFw6r32SeFewoeo/QG1LxQ+
V/gMfe+zsK0qf6o+VOVs1e/n+6k+PPfvye/aW/2L+ry2wlNDvPSbxj9ceHzs
fPb7+ndp0Tnxi1X/Se1NhceGeIj5hT2aGOYn/g79ue+CMvtTS4TfEz4f/yG2
L4RPFOEfarxDVb80xFMXZN5/vgz75WWZ7c/XwT4xDuOR4z8/9jxmPpOTu4LP
yLwffh7218sz27tvgj07hRim6FzlaPanxPnWWbrWXPWY/HbRuZdRYX3jf/QJ
6/Wg2Pv/sWE+s36xVX3DevtdYwxi/YZ4/WXh2ux/ke0b/lkd9r/I9o94vhH+
TWR7VUeffy3xQOT8+7t63qP03ZYRNwn/qX+HqP31kB9ZL9wQf4O9ht9D+FTh
V0O+hbiW+LZYdIzzq9oHCr8c8hE/aPzeGv9xXS8Tvkd9LivahhzMb5vbvs1L
bO+W6drlRfv0h/IbqX07vlvs/bO/8Lf4SrHt06f6PrXVd7hwHeHmue3vTYn3
f/ICxKc7C465DohtH3ronp9i5wmI9/9RaR87TiZe21VwDoA4s77++VGlcew4
jHhsR8Ex7pbU+fUzVa9dZj6G3Op33Cd8QOrc5bfC9YR3j2xf14TPx25hv54S
/jE8H234HNiwUxPnJogJB6v+Q+y+3VXKa6zTEue6yQmcntguYh+fEP4+zCf2
Rt45PsUJxCBFxwYj9Tzfxe7bjT2QOUX8XbSvdZ7aGyXON0/TtQOIZRPna68T
bqJ63cR7FRxPG9UvTWy/yBlcpvqLsff+CsQUvE+NP0z/vBPi6SI5NeF3Qz5t
l+45U3hDiD//EB6MPQv5uM2p+Y3TNFYt4fGJc9vkLCYkzq+fLfxeyP/9o2tn
CK8XriD8Tmo+pq/ury78r9qHqv3tEN9uSM2v9VT7PmX2L0/D3oX83bvkE9R+
ktr3FR6g+far2lvG9pfPimyLH2U9Yw9VLlH9qKJjouMyxxNPYuPIXWaOV5/C
puAb527rqvJR5t8L/2gdMa/aOqs8WzLnCj+5UJ/ZNnEMTSx9VO6+J6r8Qi4n
tS91q3Dd3PHFauJXlc/JLSWOycgfv5w5R0gMRP7wtdB+e+J4aav+bZP7Wbup
bM4cj6whnlPZKtw69e/xu773jRorVftZ2CKVEvEfPlPRnCvca9OwH51fcv4N
PjkqmoOFi32J37PkMeCDW6o8oXpn8hUaq1lq7hUOFj6bHCO5xkXCdXJzLvhj
zxBD534eYmM4ZrhmOCN8U2LOjsL3aLzFJefc26fmqIj1iPk6qP0Xcq6ROSa4
JjiiTgXvYexlyzNzefcIHyD8WGZuEhuLrX00MxeKTcW2dhZ+WPX6Jcc7+EzY
nDZ6RohtfApseDvsWWafBt/mXD4jtw3EFh7C/pHap8K3uoAYMjfHB9dHjEes
h8+C73Ihe3pum4nNa8J+kdrnwvcaofZlal+Z2bcnJiM2ezDzvfjQ+NJw1sQ6
7LnsvUszPxs+Mr7ynZnHwkfGV747MzeKT41vDYcFl0UOhVwKHBBcEDE8sfyy
zFzs3cKNcue8yH3xG9XLzeGRG2FOtModD6zktyI/l/n3vFPtS3jHueOHFSWv
IdbS/ZnfFTEysfLDmblrYgZiB2LCe4OP/BRzVbhTbM4R7nGacOfYHB9cHzkx
4iJ80qtz57CjYIPIbcNZNIvMacBlkKP8oeQcJrnLRSHnRHz+Ffl24e6Jczbk
buBc4V47q/8P+pec9uTIOV1y3eTgyTvho1/DXOf9kksXPj21Df+x5JgD207M
8X3JmghikXd1TwPd/6XwxeQaY/v2/+WIVK9G/Mq7wO8r8xxnri9Q2zll/o34
reYLDxeuldh3RRNwRGJ7Q3w1Ntgn7Bnx0bhg/9AgwHsuwUYSy5NvZn7hd2q8
jPmmvtfHzt9XVd9viubsW+NvE2sW/fz11aeSrn1dNCffSvU5utazGHKUqt+s
clLRObNC8IHwhcjJPZ7bZtQLOZN/gg+DL0NM+wSxod7R/JI5DrgO8NKCNRVo
K+Ao4SrhNOE24bjhuuGw4bLh5ODmruU3EV6SWhuCxgGtwxGBX4PjhQ/9HzY/
MqcLt3toam4bjhu+u3XwP+B44XsPC/wKnDp8eavgj8Cpwt9iH9grySmTWz5b
Y5+nd/EY/mbk5xlfMmcDN7dUZXLJHB5c47ca4+TY+ZiZwtvZU2PzAzOEvxHu
FzsffkNqzQbaDTj/1ar/qDI0dj5kTmrOD+6Pz6istp9Uzo7Nl92UmiPsG5lT
bBSeZ5HqU9S/itp2qJwTm5+ai+1TuVXtU1ljufFVJd8PNwpHClfKtapqH6Zr
m9VWOzYffKbwJ8K1YvPFZwt/Klw3Np+B3oN4sbLGuDzsncSv5Lw3RtZf1BKe
ic8bW19CPLy3+o8PeznxKpzsB5Hjhbol79fs2+ti+7dcI34YKTy2ZE6IHA96
j/1KjhnX4rPhP5ccw5ATwlahleCeoYnnHHPh18hzEVtAPEsO6qPIepWKwtcK
r8I3jO3vVCrZ/9uYOd+4PHE+fu/IvgQ+xdOqV4vsC+ATrI2s//lD99dT/4nk
VzLnl9snzieT1yG/c1HJ/uun+Duq35c4f4+e6HfiW+EJwR/lWbAX2I1NmfPD
9ybOz+KfVinZfmBHsIXkG8ghfhg5riW+pQ/+ayXyPCXbhNXBn+ZZ4AQHCp+f
eO6gabtA9eMT+wvs/ycntgHkVh6KbRt6h/wP9qB/4hiMXCQ5c2IzYjByh3BM
xGbEbOQmyQkRy1WKzZXBmfWHaxe+gdwvY6a2MVfo8x6ObXvgHOEe3y5YWwSn
B7f3asFalN1ia89eEe4jDDkG9/tE4nwbNm2g8EmJbd3I3L4Uurbry5z3x79B
E9MnsX6G+Iw4bWqZ82bkz0aWHJ+cl3svuzhx/mpUbt9uiPD0sPex9pmjw4j5
EttvNDl9E+tviFWIE69S/36Jn4851k31J/S8p6h+YuL87AmJMf5oF9V/zpxP
X5U4/0b8xLOheTyFGCOyb4CPsEb1MWqfVrLmZWxijrZciAHRBrDXLlZ9jton
8R0S+xLkPGeEeOf6kscYHHmPZ6/+I/LePxkbU3IO4b+cd2TbxrUpiXPE+E/4
73cl1ljsDPMDLSZ5WfKzfAbxFBoNtBpoBtAOwSGg1UAz8GKw33+VrGmYqvro
3Hs9Ohr8cfLA5INnlhwvTYz93eCMydGT58E3ZU9BP4Zdx76zJ6BfwydDj3Vw
Yl8NnxI9WovEviZ5JHxd9jz0ZnBCaEXQBMAV4eOhTzowse9HjPGi8B2JYw/i
OZ4NjdGQyH4E/sSeJesdiXHQ96DzIfZZmvh+flN+W2KV50te06xtOFzWW7Xg
38ARwxXDqaAdhcOCC64T1ufDvMOS9zD2Mjge/H/8r8cSc6pwq3BQaEvJybM+
8BfwG+Bj4M5eC3vkMUnQq4Q9DQ76s7DeyQXj08GfwqPi68FXwX3Cga5MzNl+
EfYPtLDwRXBZH4Y5jt4U7ujjsKbhzNif8E/wU/ZmT4ycs5mWm0+DL3kj7Jn4
mHzfR4LviUagLORE0KLACcMN1y1YS4WmgpwJmgy0K3Bw5EjqFczNodFAq3FA
wVoQfFT0xQ8m9l3RbKDdaBT2PzitUsipwHXh224I6x3bAmdYDDkYuEQ4drh2
OG20ufCVcKVwpvck5uTh5uEc0R5X02c2iZxDuC53TH9w5BwXsT45gEMix/jk
Bk6NbW8WqryOnx/bfpFTfSO2/pa5eI3w46qfmFoftofqjdmvUuvL9oytb+ud
Wi9dFlv/yB7MXlwutj7ypNT6swqx9XFoztCeofFCe3lcan40ja1n7pma78xi
6xV7pda/5bH102jC0IbhM6KtRZOFNgufkNwUmjW0a/iraG3RWKC1wEdEO4sm
B20OGgy0oGhy0ObgY6JNbZ05v0EO+9fgz52d2EfEX8VmYbv2iq3PRuOF1gv/
Ee0w/lmPyJreBbk1bWjb8D/R+n6J/xA5J0CuEs0Y2jH8TbTN+IvdImtS5wb/
sHtkzfDNqg9Wnw9UrxZbDzgEPkN4n9h6dWwotrR6bD02MT2x/cLE/O9A9lO1
HxGb38SuY9/h9DuqPlT3b1J7zdh6QHIG5A4WJeZ7z1D7x2rfT+0thE9hvxZu
HZuvWxl77hCzVNE9Z6n/Fr5rbD3MCux/0THLXuwFun8r7y42H4Xdx/7D8R6t
eu/c+k10nPBJLTNzHXAecDns7/Cvs4P9wh7Bv84N9qej+p9fNFe7f5nnHnOD
mOYKtQ/SGO8JV43Nz5+cWr9TMbZ+/1Th94X3js2/43/CR14a7Huf4KvjX+Nn
9w6/Jf49fj6/PbkW4nni+l5hrjCfzhI+VM93TtFcYYMyz13mCjHL1cEfhu8k
H4N/i+Zgeuw1gxahne4fXbTGCD1Th/B90cCgjyLea5dYT0cuHP+U3BKaC/Ru
2zLbAvZI9spXMtsWbAz5sjcy2x5sELZsh0rfkjlW9I/kLNHssUeRyyRnjqYP
DR+59C8y73XseZ9lji97JObbyZ2Tg0eHgU0hN08OEp6fPZzc5JbMvg+aGPSn
H2fOHaL5QD9KThPOH46eXCc5VnQQ2BByr+RY4fDh+Mm9kpOF88cGkautKnxQ
ZM7h2tw5VXQK2BxyreT40R6i5yD3T060achvkCslJ4/2cnjBufqaws0j54Dn
aLwawodFzsHOFt5P+PDIOeAbc+d4W0TOEZP7JcfeMnKOl9w7HAjaRfQacCO/
Zs59wkGjt41y5x7R7KB3ROPeRf0nF6x9R/PfNfIZCs4CvBP4EM5kwPdvDu8X
HxPfcz35vpLPxKDf/Ua4Z8macPSfnAk4JvKZBs4KNMnMj6EBQs/VJTP3COcI
93hQZj6tWPL5k2ZhvqPxQe93iPDwojVK6P3Ij1yZeH2SX2iTOV5HI4c+b2uY
r2jW0au+HuYnmpeHQjx+ZOQzHDfkPgPRIfKZg7dC/N4p8hmA6bk1FU2DfWS+
cYaiY+QzFpyt+DzMX3x0YgnOKHC2gzMenF1Ac9sq/F7MF/JjTWLzKWjJOLPQ
nnxIwWcZyF91iM3HoC0lv3BU5DMts1T/PvBJnCFAvzEj9hmETwuOzTvlzvWy
Bn/KzDnCPT5TsHbz2BDD0c5a/S7kd3uH9fZl5twa75C1/3VmrT+/8behP2sT
nw39VMPM50FqlKwveDOzVhcN0ddJiPET56eeCuOhlUFT9mPinAF5KfJT5BJe
zZx7RyNFvh09KVoDcgpw4+gvOfvDmZHV4XnJFeJj4WttCPnYo8J+Rj75ytj8
/bUhn3xNbD4b7pp8cI3EfDXcNvnfCon5dT4PThxdR4cwX8k/756Yj4drn6iy
SvUL4Tgyfz57KT46ej7eB2fHWDNvZ475iSnZY9lrySdXV32B7t83df6Vd4n/
VSO1PhItNTmS/7j9zLkdYg70SuSnyZ2zplhbZam5Kjge/Lk8dS4DTgd/D40n
fP7jwhMyc2DHxOZY4FrgZLvF5jDhasul5rrIgbCfnag+s4vWIDBfK6TmduEA
2Y/GZx77ApVOqu+ZOvcDZ8X+1U/Xbiz6DBLrDY5tQGyOCu5tVGZ9Mu90Uuac
B3lT8qfkQtAToeUiZ8Pvhd6Us0WcUeKsEnoktG/kPNb+/3wqeA/AVsE/oA3A
n90vNT+BdgANQc3UfMAFsfUIcOvovdGGcYaMs2QvZT7rhw3EFqJn4qwRZ7Ce
C+1wSWjStyXO+cALwg+SC0K/hVaSM2WcLUMPz9kkzpBxlgw+45LY/D1cPxqJ
jSEGxt9Ek4LWuVnwb9Acoz2Gg3sytWYOTQt6gWdz69kaFuyDrU7tk3J2cF3B
viqaIThY8s9rc/uEE0P+5LSQf5kU8uvkz/EpOWuCT4+viYYXXhl+eVVqHwgt
Ij45vhE+ImdHiAnwHfFBJ4R8DL4pei5iIXzOp1Nr+tDooBd5LjffhpYWjRr8
4JTU3DPxElpiNNbw0FxbmZof+6ngHA18CD4aZ3LY//DdyC+NjXwGjXwRPh3a
S2IKfD34x58L1sDBT6IHI/YjB/+o2q9I/V33L1j7PTn1Xk58hvYbzh3eGv4a
PghOH96ZnA78GHooYm04/Id1b5XUWhtyqJyXQ39Vu2DO/8HUPvHUkA/DV4av
qaa5Ml/9q6fW1KG34dp/+sbM+hNyFOg/a2Vea+VL1mehGSRXTQ4CvS78Etw0
HHXV1JwC3ALvh7MC8Gn7JNYnsZ7gsxiLNVxZ7ftnPj/IHoaerHbm84Z7lKwX
g++iznfku8KPlSt5D9kLf4acXMlnKjifyZkB9hb6oC+Dg4HL+ErlPtWfwmcs
2Oe/N3WOmrNL+OTkrtHEoQGAX3la73sjNrvgGOL+1Dlszj4Rc5LbJod9dcgf
Yj8r8g6Kzjnjr92OP1LwmRbOtmBvyTdy5mH3zO2p2s5RKSNXoXvuKtinaZxZ
045+iz6ch0E/Sm4ADukZ9f0jtbYfH6Yt9jW11hAfCN9/empfBJ8D3+P63LE8
MTyxPBwDvgw+C77L+tS5DmJ+Yn/4IbR75UO81Tb2Z/MM5CmuTM2VoWuDz0Kv
PrVozpL8/fWpfR18JHwl9LUnFnGeHX8RJ7J2WcPkNdB/cx7m34LjRc5bofeB
EyW/Dx+FVrBciO9eT21r8LHxtQ+MvdZYc+RdJqXmEtG5wX+hv0R/zxpHP4P+
/fii1yx6GXQxrC3WGHktdDOsJdbUPyXPp5oF5wjJFb6Z2rcnR0SuaFpqXwwf
Dl/uutS+IT4avhpxKHOplsrfJce17K3ssUlkPev0ojli+ATsJ7FA/9h6MvS8
6EvgXMnHdw3+8GPMMdUPVzm3aA3XD7q3hfCIos/E7BA+OrOvgY1M8DUy21ps
ekn1B3JrO7GZ2M4Hc2s/2wRbNCK3708MgD6nVeZ4mTPWv6Tm09DT7Iycr2bP
Z++vEZtLRa+AHufnyPlx+Em0Ws3C/lghs7aoadjfqmbWarYI9ofzlZy3gZMi
38x5ec7vwGHBL6DHZ69vXjDfip4fvU6bQuE/fpLzFezNhxfMX87Incsih0Uu
a2Dm77clsv5u78zaspbBvuyZWTt0SNhf4XPRlrUK63GPzFqgg8N+cW/u9dM6
+LLLc8/fVsF3RVeHvo4zVudH1u2h3+MM7OjI5+XhMtEXoKcbg/9V9DsnV3F2
5nfPtbGZ9choZ8gxkWs6K/Nv/7DwJcyVzHXmRPPMGrtTYp8hRHvH98c2YBOI
7wZl9i3Zo4nvOCPB3HpI+CJsR2o9JWeaOH+9T2r9HhpzzrtXE55X9Jkezn9z
xgY9LJo/tH+coUG7joYQLSF6a7hT9jNis12p28k5kGsZLjym6DPT7J/bU589
IcZrytyOrQllDbAWtqY+O0IMeXBmnxjfmBwl5+tPymxbsDnEY+iZ0Way/xJb
Xpj5uzLeYZltHLYODpLz7ZxBQX+KJhJtJHprtJx8HrErZ0zYj9E8on38O/VZ
LXIq7fHlMj8PMRDxLj4lviU5U877w/+zHqsVrV/9KHWsT4xPrD87daxMDE4s
DkdMrEeMSqzKeWi4dPQw6C85b4yWCT0MelZsNXqA53TPuMh/XwEuGD0MetJN
qXMJ5BzIPVxEnlVtTxZ8Rp3YEH3quoL9QnSx6GOx//hJN6bONRLTE9ujd2M/
qV60PndW6twB+wm5BTjnqwvOcZLrnJ879iUGJhcCDwYfRn6TPCc+N743ZwL4
+wVwXofE5tvgwmqp/daiz4zy9xXgwKcWnPMk9wlnTu6TnCi50Zm5Y3VidnIx
83LnTsiZkDuBo2etEFMTW9+UOxdDjoVcy8bUsQg5GXIz7JFdQn6E/DH6JrTH
rBnWDpwF3AUx7fbMnCDcIPbo8dQaWXjqxWH+cEaGszL8vYRvUmv64YDRL94a
/Af+NkUnlbIw//lbFJyh4SwN+jFyJa3JuYX3BVeIPVyROr6HN4E/4bwBnDA8
B3wHZ3k488XZL8bclvpMXtfY+ytn9eAs4S7RSKCVmBZyrtj751NzivAu8C9o
/eHA4XngezifxZnRo2Kfv+EsKRw2vA/8D2fTeD+HxeY74VLhMDlrgo9Pfgn9
w4jEGhD0FugTRie2D+gtOEPEWSLe0Zepf3+0E8yhIZm/Dzpc9LgvqO3l1Ge9
M5XXmJup2/qxZjM/LzpX9K7PpZ6//8XXKp+l1hPy3bFB6A/h3ODeyHG8lfnM
CBwles/Fuc+zsrZYY9hv9h/2/qVhv8W/428ZcGaKs1Psf8wFzuRxNq+SSt2i
fUbyR5zJgGNG/7oot17mksT2E/0GGm50DkvC/oV9ITa8M9gTztNii7BJ+A/Y
D/aGO4I9IV+Er0ZOHX0gHD45f649m1rvx9+QgB9BS0N8OT+x3gEtJTl9fCD8
P2I5fp9zY+/ZzFfiuQWJ9RBoJfk+n8beo9mrmf+fxd5z2XvRNOPD4f8Re6Ep
RVuKf0UsS7zbKrZ/QPyFjUdrj83D9jG/R8S2KbxPNPZo7bHP/C2ZAcFm8054
N9gb9kT+ZseRqTXKnUN+FO0yGnxsOr8pvy1nIi+P7bNzVhKfDk0FORJ8Pdb3
qNg2g9+X+bE1tk3Htk8PeyB8Er4W8Wuz2Oc3iR/hIOAisLG35I5nbkysz0C7
BweCD4o/S6wIxzIlMgcH98IZp22xbTC2mDOfE2LbLM6CoiHHJ65TcCyKBgLe
FP6Us0j4dGgf2J/x9eBU4FbU/B9fS75gTmL9AFpDOL8LI58ZhQvEh+8e+7wr
vj35geax/TXidXzsHrH9f3xvOA24DWzwwtwxy3Gx4xViGWzW4Nj2BlsGJ0XM
QfxCLMUePTD2+TH2bmzqoNj2Fls7NfXabhz2N+YAcwGfDX+X8+3YPmwg/nO5
zFrlo1XKZz4TAqdPjmZF7pgY24iNxP8mf4VWHE3N+6n5F3TOjLEbvrGuHVm0
jca/J1+I7eaMF/ktzqBgc3kGnoUYh1gHn7pi+P04u8vfV/kz9RkLdBTLgv+F
f8XfGuFM8TEhnqTvmjA/ycfhO3AGhnwfZzzQOdwT/DXOIHMWmb9v8k9q/4b6
02G+kA/krAZ76Cup38dhiXNm6Hmxx2jTsNGnZeZ08StYL3C9cLT8bRn2N7hb
OGD+pgvrDW4Yzpa/IcR+CJcLB8zfSuH7wA1zRqNdyI/Dh8KPtg/5evhYzuSg
2SAH91huvQ9+N+sb/Q8cNH9rhe8DNw1HyTkwOE24S/xnzqqQM/kgNQfKOTPO
m8GNoulEA0KO8eHc63NK7HeOP0v+h7VLTEo+H46avzGFvT4uzO/Rsfd84nny
rZw9QIP9YmqNKBoPctoP5Z7jzHXOPO2eWs99TWJNZduwvtGwoPdfov5Xpba1
xNzwBexPnN3mjNHvYf5j24nZq2fuD7dwULDP+JtoE/HxB2ReQ6wlYlTyseiN
r0+soUcfif9E/ogYgXgDPSZ/Uwe+Ha0m76thYh8JbSz2tm3BGtMamdc0axuO
N029R7BXkCOIw+/ZLHGOFn0476dB4hxVo5D/Yy8h5q+UOWdB7oIYjliOfAja
S/yz/pn3APYCYvLyqef7pNgxCeuFPYi9iJxHkjq/h21BI1s5s2YI7RD6AbSl
/wd3LsEc
            "]], Polygon3DBox[CompressedData["
1:eJwt2Hm8lmMex/FH5znnOe01WpSSClGqMSVeMxSKNkn73imV9lUYEmnTaqKd
VluylKVFaaHd0IKKlyyp0IKMVLZm5v173f3xPff9+1zf33Vd931f23Mq3jW4
5aB8qVTqE8qmmbmpVPd0KrWR/nVBKlUkJ5UqS3Pdl2UoQ6/wNMbeiRy+0TQP
uxh7iq88Tzl6FVtER5R/Q/2UXZNJpTrSbPc7sPb0BM8Dcl/KSqWO6Uwp9e6S
35dvmfs/8W/5FvPNpl7u36Fp6igq75+0lOc7uSX5d8odgS3HTmFlsY+wB7GX
sRNYaWw3Nh07hO2MZ1BfnjbvwZ7FzvAV5tvGNxx7DvsVK4Jtx57ADmLvp5Pn
7iJ3MDYfO86nq6l3+QZh87CjGEvqHexZhUflHaMhcm9U8CZWQ1lNmoOVkTeE
Fsn9SW4BuZuVvcFX1bVadvIeL+IZRs/w/cJXiG+rsqHYYuxnrCC2BXtebrZr
Or4j1lu7V1J59fTQl2vwFTwD5T4d712u29RG/Ek3X2Mf8D3N31VeP1qu/Fy8
f/wZuVdhFZT3FteStxKrhBXH2mBVsNexilhRrAV2OfYaNiDGkLqO5EvG4wZ/
+sf4ww5hrKn12CreOq7X0QJ1VIjxiM0Uz6KbefeofxB2Sm5nGhbfTvwcHVfR
CRoqtx5fc7o12uObK38Tz33qXCI+LO9CZe/j78YYjO9D9fGP5bXEFvKdFP9I
u8Tbop34zlRP7lHXhth7ype4v5FWi9+iuu5fzE7Kjru2xl5Q3znxpXJ3YFuw
p13nUfPwaXcrNj+en1pgP2CNqK6cdfKn4xt4nvccv4kfjfGu7B/iO/lui++K
P4Vvzk14lI8Rj6X1WFtaxpNNVZTtwRtnkmdaj80Qb+RpQ6+K05RFn4k78M3y
frd7z21jPcFaRX+U/6m/FdTxnvza2p0SY9F9H1rHM5jO8OXRJN4yucncjDm6
S109aRZ2F7ZE7u98B7H5WDdsPt9ucR+ag43SxmqequLK/Ae0MxfvK3431iD+
YjzdM8l42hPrVcxrnhbxzeV+pR/F5L4c8xI7i3Wjx/GLYwzQITmHqa86aqpr
Me9pnl7ZyTPGsw7k+xnrRANibop78L6o/A/sa/kLsALYFuxBbCpWULxDfies
KtYYey8mJ29H9XemHurLyk3Wp1inLou5ReOx+3lflPcNTwllH/BMwHZhFalV
rLVYP2xOvM+oK8ZSzCdtD/NMuTE2YhKK68daieWPerAs8bU0AMvC7sNOqquS
theoa2L4qGJu8j3ju94fPrpIXEtuf7n5xMPk/iC3ND6ebyg2hEqJS9JobKB4
AJUQfyr35piTMc+UHYh+4N97gDY0TZevUl9/7IS4dTwvnRX3o8Pub6cJfJX4
fo41IeYVtVHfafFlfM+4nxrfkiqLP8sk7bUS19Ln1XL3x1qCtYy1HFuJlcPa
ebY54oa0Fbtb/sfavDbGh3b/x5+DP8a3kqcpTeLJYBOwVeJmNBmbjH0ub7N4
urK26u+N78Xq0N3qi4V7Eh0Qb+J7MtZfvoPR55jH1FQ/D4sPua8qpS5fPZqg
rl8yybN3UHYrtiXOAsHUM1tcnzZjP2Gt+NrHOME2YSXi/fHNEF9Lb2EXYndg
02OfoVVYSexObKb4elqL9dH2Pn2+jnrr0wVYL+wjcW3qif1XW5/LbeB6WzyL
9r8S38dXWD3D+O6hq/NTvJvY38T9lR1R32z6RlyPHop5EucFuZXV1Y3nYv4q
8npgu3kqUWUqpr5l2KV8XfnK8F3BN1f+d8pvpofVd0WcA+hHcSMai119fvwd
FzegW6NO9c3Df3DfkMbwVRMvoJMxx2kcVj32RToqvoUewarEHk3HxPVpFHZl
TrIWv5KV7EWxJ+VoYxH+H6wpPcZXU1xDv/vof89YhzzLd9h1rqeV10kn63is
50vxQrFXul+nrLW4gzZWiQtHnbF2qute72Si9oZnJ3Mr5ljH2ONci2Yl3zm+
d2dsrbg4tcRKY52wNfF+qQVWKpO873jvjdTXRL1b3L/MV1p8h/4U5rs05hW2
QlnBeF9xZsVGYeV4HsVGx5zwDv6aSdblXuJByo57jr/HGSHOKjEOsLNY3Uxy
Jusb7xQ7h90QZzusT3xf7Pc4r8Y4d/9AzEPvpZO4vXZXigtRkzifysuXm6zL
sT434t/G1zXOAjzV4mwi97SyLtiOrGRtjzX+DPYI75viP+Rfgu3HlvAVdC1A
b2KDtDGS7/VYz/jKYXuVPRzrrPamZiXn+zye4Vh+bCS2Hbsz+ix/pr5uw1uG
n2catXO/JtagWOP5Ho/9O+YyTYy9AEvLnRjnvnSyFzQQr43zQJxjYj3WRjPs
AhoXZ/h0so/cEnmxVurHVTFO+LLEGXwyz7N0L1/DeDb1XSSewrefryvfI1hZ
7HHsU6xbTvLNy8deHus95fPNR2Cl4hnEe/k6892PFcXGxFkWa4M9iP0l9kls
N9YeewArjo3DdmHt4rcGVgwbi+3E2mJj4yyLzcS+xO7GXoh1O9bz+B2E9fEc
L2ElxLfHXh5n1vPrVZF0MkZjrKb0eVycl+N8E2eOOBepb0ysOdgM7AusFzYa
qxDrP/Y51hN7FLsk1nrsANYDeyjmTOwb2D6sC3YLrYm1NX5/xHme5944c7h/
mG+HshaRS6+JT8cZB/s4zr7Yt9hNNBK7XNxU7vJ41vNz9es4G2C56nuIbxtf
8/idEu8FG4FtjbGBZdN472MF3iTGFs9U7MvwpJOxGWN0Ct489th0sh/GvjgU
y0knZ6Q4K92B3YXtFNeM81mcDbOTM/oC8fdxTo5zjffcDXsfq05d+X7ly8P+
HfsGdcHOYt2xD8Q1KA/7DeuJfSiuRT3i9092slfsEf+NrqHD4in680X0Lb6d
PrfzHM3wT/RhZey/tEZciG+q8nV8neP7xVjJSfb24jzFaGmcibERyhelk3Ur
1q+FsQfHekPj9aWGeDvvG/E7Kzs555+M9QB/g+c3bZfH9mE/xXyI82Y6ObfV
Ud+pGPvihTQQux4bi70t94Z0ck6I88LbsUa4tqUG8e75Pswkv71ewG6g3Znk
rF059j+51emxmGs5yXmkiLLC8fsnN/lfQ/zPYQNPXryvOKtlkt87K2Jc0TFx
4ViL+NbzdInxn5vs9bHnjxTXjjOk6/8BvS0RnQ==
            "]], 
           Polygon3DBox[{{2153, 991, 837, 836, 1115, 1751}, {1749, 1113, 817, 
            818, 1114, 1750}}]},
          Annotation[#, "Charting`Private`Tag$26149#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0r1LVXEYB/Dnem/eLM2iUSivkiZh4phlkKgJiYODg26ikA66ROlfkPma
vdjSWpOLkFNjUYRbL2qp5WtFFIRIRJOfk8OPz/d5fs+5v3PPObnuwfaBVEQ8
tirzIpKc4RafH4o4zjc8ze/WsnyePWbShnfU9epvbOUfdnEhPyJr/5y5fnXB
YcpleiftDeuVcYS1fMRB+xX2X2UjLshPk+vkK3rzcpu5lyzUa9SrM/NOfYY3
1XfSEe/Vo/zAMS5ynEuc4DIn+ZFT/MS7nLZW5Htc5X2u8QE/8yG/cIbryTWZ
iGZnXnT2hrqCt9R97vGtuosv2KDXKj+T58w0ufcbek/Ul/VnWMPb3GB58gLM
lcpDYk7u1Tuh7lOn2ck1/T3P+pp8XX6tnzFXJV/SK3FOh7paXjR3irNmdnjW
TDGzbDHzj8fUf1mUvEMWco9Hucsj/M0C/uJPyyuNH8wm3wb9fHyl42KbHlFs
Jt8J1/P+/62Y1ryaOvjW9gHE40vk
        "]]}, 
      {GrayLevel[0.2], 
       Line3DBox[{1467, 1707, 2129, 2364, 1466, 2248, 1642, 1468, 2249, 1643, 
        1469, 2250, 1644, 1470, 2251, 1645, 1471, 2252, 1646, 1472, 2253, 
        1647, 1473, 2254, 2130, 2307, 1474, 2255, 1648, 1475, 2256, 1649, 
        1476, 2257, 1650, 1477, 2258, 1651, 1478, 2259, 1652, 1479, 2182, 
        2260, 1653, 1708}], 
       Line3DBox[{1481, 2131, 2308, 1480, 2132, 2309, 1482, 2261, 1654, 1483, 
        2262, 1655, 1484, 2263, 1656, 1485, 2264, 1657, 1486, 2265, 1658, 
        1487, 2266, 2133, 2310, 1488, 2134, 2311, 1489, 2267, 1659, 1490, 
        2268, 1660, 1491, 2269, 1661, 1492, 2270, 1662, 1493, 2271, 1663, 
        1494}], Line3DBox[{1496, 1709, 1806, 2135, 2365, 1495, 1711, 1807, 
        2136, 2367, 1497, 1713, 1808, 2137, 2369, 1498, 1715, 1809, 2407, 
        1664, 1499, 2183, 2272, 1810, 1665, 1500, 2372, 1718, 1811, 1666, 
        1501, 2373, 1720, 1812, 1667, 1502, 2375, 1722, 1813, 2138, 2374, 
        1503, 1724, 1814, 2139, 2377, 1504, 1726, 1815, 2140, 2379, 1505, 
        1728, 1816, 2408, 1668, 1506, 2184, 2273, 1817, 1669, 1507, 2382, 
        1731, 1818, 1670, 1508, 2383, 1733, 1820, 1671, 1819}], 
       Line3DBox[CompressedData["
1:eJwV0EkuRGEYheGPqMYyrEHflaJIKH2xAokhVqFdjIgQoUJpChMDicTAwEDC
QCIxEH333MGb853zDu6f2zCzUJqviYhZ3Kci6rIRKaynIwZkI3L1EQdyMBPx
ig3uQjbZ8lxFDulv2OQu5aGtj2uWRf0dW9yVPLIVuBY5rH9gUd/mr92t9jaM
uD+xxO1wN+52ewdG3XtymdvlbvVOvQtj7rJc4crcnd6dvF8/luP6F/a5B5lL
3sidyAn9GxXuUVaTd3A9clL/Sd7PPcnT5B1cXpb0X6wm3+Cf3b3JP8CU+w9r
XJV7cRfs/Zh2z9nP7LV6GllkcG77B+9+OwE=
        "]], Line3DBox[CompressedData["
1:eJwNyu0uwnEYx+G7WVOH4WQSCjNH4AA4hTy8cwaKzVHgBEQNYxmNFksqPan0
3vXis//ve93/pZ29rd1ERGyrk4woL0bc6kbn9rcq3neq6iQdcZ2K6PJ7+1EP
KvIM7/Enu6YUu2DL+uGXvgX24vasrN3n++zVflNdK3zAD/i73VRDq3zID/mH
3dKn1niJjdy+7I7aOmVltzHv2n31dMZz/JcP7JHS7IrlNeE5TfhY62xqH/ln
as810waf8WMe3gtKaFN//B95Sj6V
        "]], 
       Line3DBox[{1526, 2141, 2314, 1525, 2142, 2315, 1527, 2143, 2316, 1528, 
        2144, 2317, 1529, 2145, 2318, 1530, 2146, 2319, 1531, 2274, 1672, 
        1532, 2275, 2147, 2320, 1533, 2148, 2321, 1534, 2149, 2322, 1535, 
        2150, 2323, 1536, 2151, 2324, 1537, 2152, 2325, 1538, 2276, 1673, 
        1539}], Line3DBox[{1553, 1760, 2337, 2201, 1552, 1759, 2336, 2199, 
        1551, 1758, 2335, 2197, 1550, 2196, 2334, 1756, 1549, 2195, 2333, 
        1754, 1548, 2194, 2332, 1752, 1547, 2415, 1750, 1749, 2384, 1546, 
        1748, 2331, 2192, 1545, 1747, 2330, 2190, 1544, 1746, 2329, 2188, 
        1543, 2187, 2328, 1744, 1542, 2186, 2327, 1742, 1541, 2185, 2326, 
        1740, 1540, 2414, 1737, 1736, 1739}], 
       Line3DBox[{1555, 1738, 2277, 1674, 1877, 1741, 2278, 1675, 1878, 1743, 
        2279, 1676, 1879, 1745, 2280, 1677, 1880, 2189, 2281, 1678, 1881, 
        2191, 2282, 1679, 1882, 2193, 2283, 1680, 1883, 2416, 1751, 2153, 
        2385, 1884, 1753, 2284, 1681, 1885, 1755, 2285, 1682, 1886, 1757, 
        2286, 1683, 1887, 2198, 2287, 1684, 1888, 2200, 2288, 1685, 1889, 
        2202, 2289, 1686, 1761}], Line3DBox[CompressedData["
1:eJwV0DVShFEQReFHgqQU7oO7bIUlkCEFKQ45roMXroPMIIU7++L7g1O3+/YJ
Xr1Y10Bnf1oIYRIV6SFsZ4Twhx004h4dmSGsZ4XwIMs5m7pfbKEhcvR97u3y
zl7GWZc/2EA97tx6OW3y1l7KWZPfmNBf6+vMKbSak7KEE5dfGOdc6WvNN2gx
X8tizqV5xP3TvooaXKFZfymLOAnzMOfDvoJqJNCkX9PfykLeku4dy6jCRfQP
bnFOShZwFnRvWEQlkvoe9wZ5bs/nzMlXzCMWvdmtm1Mvz+x5nFn5gjH9hb7C
fIo684nM5czIZ4xyzqP/Nx+j1nwkczhn5iH3J/t09P84jP5BfyCzOafmQc6j
fSr6f+xhH7vIcv8HWOtBqQ==
        "]], 
       Line3DBox[{1570, 2154, 2338, 1569, 996, 1571, 2290, 1687, 1572, 2291, 
        1688, 1573, 2292, 1689, 1574, 2293, 1690, 1575, 2294, 1691, 1576, 
        2295, 2155, 2339, 1577, 2156, 2340, 1578, 2296, 1692, 1579, 2297, 
        1693, 1580, 2298, 1694, 1581, 2299, 1695, 1582, 2300, 1696, 1583}], 
       Line3DBox[{1585, 2058, 2059, 2157, 2444, 1584, 2061, 2062, 2158, 2445, 
        1586, 2063, 2064, 1012, 1587, 2065, 2066, 2446, 1697, 1588, 2236, 
        2301, 2067, 1698, 1589, 2447, 2068, 2069, 1699, 1590, 2448, 2070, 
        2071, 1700, 1591, 2450, 2072, 2073, 2159, 2449, 1592, 2074, 2075, 
        2160, 2451, 1593, 2076, 2077, 1016, 1594, 2078, 2079, 2452, 1701, 
        1595, 2237, 2302, 2080, 1702, 1596, 2453, 2081, 2082, 1703, 1597, 
        2454, 2083, 2084, 1704, 1598}], 
       Line3DBox[{1612, 1800, 1863, 1799, 2405, 1611, 1797, 1860, 1796, 2404, 
        1610, 1794, 1858, 1793, 2403, 1609, 2204, 2342, 1856, 1791, 1608, 
        2401, 1789, 1854, 1788, 1607, 2399, 1786, 1852, 1785, 1606, 2396, 
        1783, 1850, 1782, 2397, 1605, 1780, 1848, 1779, 2394, 1604, 1777, 
        1846, 1776, 2393, 1603, 1774, 1844, 1139, 1602, 2203, 2341, 1842, 
        1772, 1601, 2391, 1770, 1840, 1769, 1600, 2389, 1767, 1838, 1766, 
        1599, 2387, 1764, 1836, 1763, 1801}], 
       Line3DBox[{1614, 2161, 2343, 1613, 2162, 2344, 1615, 2163, 2345, 1616, 
        2164, 2346, 1617, 2165, 2347, 1618, 1035, 1619, 2303, 1705, 1620, 
        2304, 2166, 2348, 1621, 2167, 2349, 1622, 2168, 2350, 1623, 2169, 
        2351, 1624, 2170, 2352, 1625, 1043, 1626, 2305, 1706, 1627}], 
       Line3DBox[{1641, 1805, 1166, 1640, 2363, 2181, 1639, 2362, 2180, 1638, 
        2361, 2179, 1637, 2360, 2178, 1636, 2359, 2177, 1635, 2358, 2176, 
        2306, 1634, 1051, 1633, 2357, 2175, 1632, 2356, 2174, 1631, 2355, 
        2173, 1630, 2354, 2172, 1629, 2353, 2171, 1628, 2406, 1803, 1802, 
        1804}], Line3DBox[CompressedData["
1:eJwV0OsqhFEUgOElNSg34bckJEmSxAVMklLSYJxnjBnn8/lwD4yzO+AOXIhS
SlJKKSXP9+Nprb3f+tp9dZl8OlcREVl6qyKeaK6OeDT7SLFcE/HgLmffYZse
KlnSzsw5ttikm2BROzVn2SDjfOs7Xfa/VMSJOcM6I9qN1mn/1Y7Naa7dDWtr
9g5+tCNziittSFu1t/OtlZzv3U86ryRvp40vrajdaRPJu5P30cqntqAd2rOU
KNLCh1bQDuzjLDDofOk7TfZ3fd8co8CAVtYa7W/anjnKhbt+bd7ewKu2m/wT
zrW0lrfX86LVuivbn/kHzyg1mA==
        "]]}, 
      {GrayLevel[0.2], 
       Line3DBox[{736, 920, 2248, 737, 2309, 934, 765, 1063, 2367, 949, 780, 
        1262, 1263, 1189, 2368, 1428, 957, 788, 1443, 1444, 2458, 1442, 961, 
        796, 2315, 969, 811, 2326, 1098, 1204, 1295, 984, 826, 2425, 1296, 
        1297, 1219, 988, 2278, 830, 996, 845, 1376, 2445, 1011, 860, 1377, 
        1378, 1234, 2388, 1249, 1019, 868, 1132, 2389, 1023, 876, 2344, 1031, 
        891, 2353, 1046, 906}], 
       Line3DBox[{738, 921, 2249, 739, 935, 2261, 766, 1064, 2369, 950, 781, 
        1264, 1065, 1190, 2370, 1429, 1430, 789, 1446, 1340, 2459, 1445, 962, 
        797, 2316, 970, 812, 2327, 1099, 1205, 1298, 1299, 1336, 2428, 1300, 
        1100, 1220, 989, 2279, 831, 997, 2290, 846, 1379, 1012, 861, 1380, 
        1133, 1235, 2390, 1250, 1251, 869, 1134, 2391, 1024, 877, 2345, 1032, 
        892, 2354, 1047, 907}], 
       Line3DBox[{740, 922, 2250, 741, 936, 2262, 767, 1066, 951, 2407, 782, 
        1265, 1067, 1191, 2371, 1431, 1432, 790, 1449, 2312, 1341, 1447, 963, 
        798, 2317, 971, 813, 2328, 1101, 1206, 1301, 1302, 1337, 2429, 1303, 
        1102, 1221, 990, 2280, 832, 998, 2291, 847, 1381, 1013, 2446, 862, 
        1382, 1135, 1236, 2392, 1252, 1253, 870, 2341, 1136, 1025, 878, 2346, 
        1033, 893, 2355, 1048, 908}], 
       Line3DBox[{742, 923, 2251, 743, 937, 2263, 768, 1068, 1069, 2272, 1170,
         1266, 1070, 1192, 2437, 1071, 1362, 1344, 2432, 1342, 1448, 1343, 
        799, 2318, 972, 814, 2329, 1103, 1207, 1104, 1316, 1177, 2409, 1317, 
        1105, 1222, 1106, 2281, 833, 999, 2292, 848, 1383, 1384, 2301, 1385, 
        1386, 1137, 1237, 2417, 1138, 1282, 1181, 1139, 1140, 879, 2347, 1034,
         894, 2356, 1049, 909}], 
       Line3DBox[{744, 924, 2252, 745, 938, 2264, 769, 1072, 2372, 1073, 1171,
         1267, 1074, 1193, 2438, 1075, 1363, 1347, 1345, 2433, 1450, 1346, 
        800, 2319, 973, 815, 2330, 1107, 1208, 1108, 1318, 1178, 2410, 1319, 
        1109, 1223, 1110, 2282, 834, 1000, 2293, 849, 1387, 2447, 1388, 1389, 
        1390, 1141, 1238, 2418, 1142, 1283, 1182, 1143, 2393, 1144, 880, 1035,
         895, 2357, 1050, 910}], 
       Line3DBox[{746, 925, 2253, 747, 939, 2265, 770, 1076, 2373, 1077, 1172,
         1268, 1269, 1194, 2439, 1365, 1364, 1350, 1348, 2434, 1451, 1349, 
        801, 974, 2274, 816, 2331, 1111, 1209, 1321, 1320, 1424, 2455, 1322, 
        1323, 1224, 1112, 2283, 835, 1001, 2294, 850, 1391, 2448, 1392, 1393, 
        1394, 1395, 1239, 2419, 1285, 1284, 1183, 1145, 2394, 1146, 881, 1036,
         2303, 896, 1051, 911}], 
       Line3DBox[{748, 926, 2254, 750, 940, 2266, 771, 1078, 2375, 1080, 1173,
         1270, 1271, 1195, 2440, 1367, 1366, 1353, 1351, 2435, 1452, 1352, 
        802, 975, 2275, 817, 1113, 2384, 1210, 1325, 1324, 1425, 2456, 1326, 
        1327, 1225, 2416, 1115, 836, 1002, 2295, 851, 1396, 2450, 1398, 1399, 
        1400, 1401, 1240, 2420, 1287, 1286, 1184, 1147, 2397, 1149, 882, 1037,
         2304, 897, 1052, 2306, 912}], 
       Line3DBox[{752, 928, 2255, 753, 2311, 942, 773, 1081, 2377, 953, 784, 
        1274, 1275, 1197, 2378, 1434, 959, 792, 1457, 1458, 2461, 1456, 965, 
        804, 2321, 977, 819, 2332, 1116, 1212, 1307, 986, 828, 2427, 1308, 
        1309, 1227, 992, 2284, 838, 2340, 1004, 853, 1404, 2451, 1015, 864, 
        1405, 1406, 1242, 2398, 1255, 1021, 872, 1150, 2399, 1027, 884, 2349, 
        1039, 899, 2359, 1054, 914}], 
       Line3DBox[{754, 929, 2256, 755, 943, 2267, 774, 1082, 2379, 954, 785, 
        1276, 1083, 1198, 2380, 1435, 1436, 793, 1460, 1354, 2462, 1459, 966, 
        805, 2322, 978, 820, 2333, 1117, 1213, 1310, 1311, 1338, 2430, 1312, 
        1118, 1228, 993, 2285, 839, 1005, 2296, 854, 1407, 1016, 865, 1408, 
        1151, 1243, 2400, 1256, 1257, 873, 1152, 2401, 1028, 885, 2350, 1040, 
        900, 2360, 1055, 915}], 
       Line3DBox[{756, 930, 2257, 757, 944, 2268, 775, 1084, 955, 2408, 786, 
        1277, 1085, 1199, 2381, 1437, 1438, 794, 1463, 2313, 1355, 1461, 967, 
        806, 2323, 979, 821, 2334, 1119, 1214, 1313, 1314, 1339, 2431, 1315, 
        1120, 1229, 994, 2286, 840, 1006, 2297, 855, 1409, 1017, 2452, 866, 
        1410, 1153, 1244, 2402, 1258, 1259, 874, 2342, 1154, 1029, 886, 2351, 
        1041, 901, 2361, 1056, 916}], 
       Line3DBox[{758, 931, 2258, 759, 945, 2269, 776, 1086, 1087, 2273, 1174,
         1278, 1088, 1200, 2441, 1089, 1368, 1358, 1356, 1462, 1357, 807, 
        2324, 980, 822, 2335, 1121, 1215, 1122, 1328, 1179, 2411, 1329, 1123, 
        1230, 1124, 2287, 841, 1007, 2298, 856, 1411, 1412, 2302, 1413, 1414, 
        1155, 1245, 2421, 1156, 1288, 1185, 1157, 2403, 1158, 887, 2352, 1042,
         902, 2362, 1057, 917}], 
       Line3DBox[{760, 932, 2259, 761, 946, 2270, 777, 1090, 2382, 1091, 1175,
         1279, 1092, 1201, 2442, 1093, 1369, 1361, 1359, 2436, 1464, 1360, 
        808, 2325, 981, 823, 2336, 1125, 1216, 1126, 1330, 1180, 2412, 1331, 
        1127, 1231, 1128, 2288, 842, 1008, 2299, 857, 1415, 2453, 1416, 1417, 
        1418, 1159, 1246, 2422, 1160, 1289, 1186, 1161, 2404, 1162, 888, 1043,
         903, 2363, 1058, 918}], 
       Line3DBox[{762, 1060, 1061, 2260, 763, 947, 2271, 778, 1094, 2383, 
        1095, 1176, 1280, 1281, 1202, 2413, 1096, 1372, 1370, 2443, 1465, 
        1371, 809, 982, 2276, 824, 2337, 1129, 1217, 1333, 1332, 1426, 2457, 
        1334, 1335, 1232, 1130, 2289, 843, 1009, 2300, 858, 1419, 2454, 1420, 
        1421, 1422, 1423, 1247, 2423, 1291, 1290, 1187, 1163, 2405, 1164, 889,
         1044, 2305, 904, 1166, 1167, 1168}], 
       Line3DBox[{905, 1045, 2406, 1165, 890, 1030, 2343, 875, 1022, 2387, 
        1131, 867, 1018, 1248, 2386, 1233, 1375, 1374, 859, 1010, 2444, 1373, 
        844, 995, 2338, 829, 2277, 987, 1218, 1294, 1293, 2424, 825, 983, 
        1292, 1203, 2414, 1097, 810, 968, 2314, 795, 960, 1439, 1441, 1440, 
        787, 956, 1427, 2366, 1188, 1261, 1260, 779, 948, 2365, 1062, 764, 
        933, 2308, 735, 919, 2364, 1059, 1169}], 
       Line3DBox[{913, 1053, 2358, 898, 1038, 2348, 883, 1026, 2396, 1148, 
        871, 1020, 1254, 2395, 1241, 1403, 1402, 863, 1014, 2449, 1397, 852, 
        1003, 2339, 837, 991, 2385, 1226, 1306, 1305, 2426, 827, 985, 1304, 
        1211, 2415, 1114, 818, 976, 2320, 803, 964, 1453, 1455, 2460, 1454, 
        791, 958, 1433, 2376, 1196, 1273, 1272, 783, 952, 2374, 1079, 772, 
        941, 2310, 751, 927, 2307, 749}]}, {}, {}}},
    VertexNormals->CompressedData["
1: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
     "]], {}},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{342.5243450946391, 162.64117242782828`},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->
   NCache[{{-10, 10}, {-Pi, Pi}, {-1.0000002499998806`*^16, 0.}}, {{-10, 
     10}, {-3.141592653589793, 3.141592653589793}, {-1.0000002499998806`*^16, 
     0.}}],
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-3.322848947687264, 0.13380591642522804`, 0.6251166671776501},
  ViewVertical->{0.18458929278560654`, -0.007433121358301624, 
   0.9827876381476226}]], "Output",
 CellChangeTimes->{{3.9029156799417114`*^9, 3.9029157195474577`*^9}, 
   3.9029160143012037`*^9, {3.902916052514028*^9, 3.9029160714320297`*^9}, {
   3.9029161306302843`*^9, 3.902916185962411*^9}},
 CellLabel->"Out[48]=",ExpressionUUID->"d4fb6201-8c51-4a5a-a3b2-70bf8607c4f9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Metric Derivatives", "Chapter",ExpressionUUID->"fd88a432-f50f-4a7c-ac46-99dbfef25b39"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dGdr", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"D", "[", 
     RowBox[{"G", ",", "r"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"dGdth", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"D", "[", 
     RowBox[{"G", ",", "theta"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"dGdr2", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"D", "[", 
     RowBox[{"dGdr", ",", "r"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"dGdth2", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"D", "[", 
     RowBox[{"dGdr", ",", "theta"}], "]"}], "]"}]}], ";"}]}], "Input",Expressi\
onUUID->"3b9ab370-4d0e-4059-9383-780a59c773e3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Contravariant Metric Components", "Chapter",ExpressionUUID->"5e06d3a8-5fec-43b4-9580-aefe51eaf4a5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Ginv", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Inverse", "[", "G", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Ginv", "//", "MatrixForm"}], "*)"}]}]}], "Input",ExpressionUUID->\
"074949ff-df56-4c26-85ba-aeff36a59a38"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gutt", "=", 
   RowBox[{
    RowBox[{"Ginv", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"gurr", "=", 
   RowBox[{
    RowBox[{"Ginv", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"guthth", "=", 
   RowBox[{
    RowBox[{"Ginv", "[", 
     RowBox[{"[", "3", "]"}], "]"}], "[", 
    RowBox[{"[", "3", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"gupp", "=", 
   RowBox[{
    RowBox[{"Ginv", "[", 
     RowBox[{"[", "4", "]"}], "]"}], "[", 
    RowBox[{"[", "4", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"gutr", "=", 
   RowBox[{
    RowBox[{"Ginv", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"gutp", "=", 
   RowBox[{
    RowBox[{"Ginv", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", "4", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"gurp", "=", 
   RowBox[{
    RowBox[{"Ginv", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "[", 
    RowBox[{"[", "4", "]"}], "]"}]}], ";"}]}], "Input",ExpressionUUID->\
"67d0de50-021a-4f3a-8a8b-a45d3bac1f8c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Christoffel Symbol", "Chapter",ExpressionUUID->"caf1af02-65a5-41dd-aab3-cb0befa005ea"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Christ", "=", 
   RowBox[{
    RowBox[{"ResourceFunction", "[", "\"\<ChristoffelSymbol\>\"", "]"}], "[", 
    RowBox[{"G", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "r", ",", "theta", ",", "phi"}], "}"}], ",", 
     RowBox[{"\"\<Kind\>\"", "->", "\"\<Second\>\""}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Christ", "=", 
   RowBox[{"Simplify", "[", "Christ", "]"}]}], ";"}]}], "Input",ExpressionUUID\
->"e148c335-9657-414d-96f5-717fed4a9ad8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"test", "Christ", "numerically"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"num", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"r", "->", "1.0"}], ",", 
     RowBox[{"theta", "->", "0.15"}], ",", 
     RowBox[{"M", "->", "1"}], ",", 
     RowBox[{"a", "->", "0.5"}], ",", 
     RowBox[{"defpar", "->", "0"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{"Part", "[", 
     RowBox[{"Christ", ",", "1", ",", "1", ",", "2"}], "]"}], "/.", "num"}], 
   "]"}], "//", "MatrixForm"}]}], "Input",ExpressionUUID->"e0e74335-8874-4f94-\
98f6-a7d00469cdea"],

Cell[BoxData[
 TagBox[
  RowBox[{"-", "0.8132030130957609`"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[45]//MatrixForm= \
",ExpressionUUID->"47b777d9-a6bb-4a11-8b9a-2fda1d854186"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Redshift", "Chapter",ExpressionUUID->"abd0bbd4-9ce7-41ea-b790-1ca8a16e520d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"omega", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"dGdr", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", 
        RowBox[{"[", "4", "]"}], "]"}]}], "+", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"dGdr", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "4", "]"}], "]"}], "*", 
         RowBox[{
          RowBox[{"dGdr", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "4", "]"}], "]"}]}], "-", 
        RowBox[{
         RowBox[{
          RowBox[{"dGdr", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "*", 
         RowBox[{
          RowBox[{"dGdr", "[", 
           RowBox[{"[", "4", "]"}], "]"}], "[", 
          RowBox[{"[", "4", "]"}], "]"}]}]}], "]"}]}], ")"}], "/", 
    RowBox[{
     RowBox[{"dGdr", "[", 
      RowBox[{"[", "4", "]"}], "]"}], "[", 
     RowBox[{"[", "4", "]"}], "]"}]}]}], ";"}]], "Input",ExpressionUUID->\
"4581fd29-3784-4f33-95ce-857c7bd0146a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"uet", "=", 
   RowBox[{"1", "/", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"G", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "+", 
        RowBox[{"2", "*", 
         RowBox[{
          RowBox[{"G", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "4", "]"}], "]"}], "*", "omega"}], "+", 
        RowBox[{
         RowBox[{
          RowBox[{"G", "[", 
           RowBox[{"[", "4", "]"}], "]"}], "[", 
          RowBox[{"[", "4", "]"}], "]"}], "*", "omega", "*", "omega"}]}], 
       ")"}]}], "]"}]}]}], ";"}]], "Input",ExpressionUUID->"25932e69-f09c-\
4759-bd6f-48980a1fdc3c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"1", "/", 
   RowBox[{"(", 
    RowBox[{"uet", "*", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"omega", "*", "ktkp"}]}], ")"}]}], ")"}]}]}]], "Input",Expressi\
onUUID->"09f60ce0-2583-4268-8461-ac1f730e19b4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"\[Sqrt]", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox["a", "2"], "+", 
        RowBox[{"2", " ", "r", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "theta"}], "]"}]}]}], 
       RowBox[{
        SuperscriptBox["a", "2"], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["r", "2"]}], "+", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "theta"}], "]"}]}]}]], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"8", " ", "a", " ", "M", " ", "r", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["a", "2"], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["r", "2"]}], "+", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "theta"}], "]"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            RowBox[{"4", " ", "a", " ", "M", " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["a", "2"], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["r", "2"]}], "+", 
               RowBox[{
                SuperscriptBox["a", "2"], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "theta"}], "]"}]}]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "theta", "]"}], "2"]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["a", "2"], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox["r", "2"]}], "+", 
               RowBox[{
                SuperscriptBox["a", "2"], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "theta"}], "]"}]}]}], ")"}], "2"]], "+", 
           RowBox[{"\[Sqrt]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"4", " ", "M", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["a", "2"], "-", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["r", "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox["a", "2"], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "theta"}], "]"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["a", "4"], " ", "M"}], "+", 
                    RowBox[{"3", " ", 
                    SuperscriptBox["a", "4"], " ", "r"}], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["a", "2"], " ", "M", " ", 
                    SuperscriptBox["r", "2"]}], "+", 
                    RowBox[{"8", " ", 
                    SuperscriptBox["a", "2"], " ", 
                    SuperscriptBox["r", "3"]}], "+", 
                    RowBox[{"8", " ", 
                    SuperscriptBox["r", "5"]}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["a", "2"], " ", "r", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["a", "2"], "+", 
                    RowBox[{"r", " ", 
                    RowBox[{"(", 
                    RowBox[{"M", "+", 
                    RowBox[{"2", " ", "r"}]}], ")"}]}]}], ")"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "theta"}], "]"}]}], "-", 
                    RowBox[{
                    SuperscriptBox["a", "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{"M", "-", "r"}], ")"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"4", " ", "theta"}], "]"}]}]}], ")"}], " ", 
                   SuperscriptBox[
                    RowBox[{"Sin", "[", "theta", "]"}], "2"]}], ")"}], "/", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox["a", "2"], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["r", "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox["a", "2"], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "theta"}], "]"}]}]}], ")"}], "4"]}], 
                ")"}]}], "+", 
              FractionBox[
               RowBox[{"16", " ", 
                SuperscriptBox["a", "2"], " ", 
                SuperscriptBox["M", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["a", "2"], "-", 
                   RowBox[{"2", " ", 
                    SuperscriptBox["r", "2"]}], "+", 
                   RowBox[{
                    SuperscriptBox["a", "2"], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "theta"}], "]"}]}]}], ")"}], "2"], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "theta", "]"}], "4"]}], 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["a", "2"], "+", 
                  RowBox[{"2", " ", 
                   SuperscriptBox["r", "2"]}], "+", 
                  RowBox[{
                   SuperscriptBox["a", "2"], " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "theta"}], "]"}]}]}], ")"}], "4"]]}], 
             ")"}]}]}], ")"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["a", "4"], " ", "M"}], "+", 
         RowBox[{"3", " ", 
          SuperscriptBox["a", "4"], " ", "r"}], "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["a", "2"], " ", "M", " ", 
          SuperscriptBox["r", "2"]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox["r", "3"]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["r", "5"]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["a", "2"], " ", "r", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["a", "2"], "+", 
            RowBox[{"r", " ", 
             RowBox[{"(", 
              RowBox[{"M", "+", 
               RowBox[{"2", " ", "r"}]}], ")"}]}]}], ")"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "theta"}], "]"}]}], "-", 
         RowBox[{
          SuperscriptBox["a", "4"], " ", 
          RowBox[{"(", 
           RowBox[{"M", "-", "r"}], ")"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"4", " ", "theta"}], "]"}]}]}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["r", "2"], "+", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "theta", "]"}], "2"]}]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["a", "2"], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["r", "2"]}], "+", 
            RowBox[{
             SuperscriptBox["a", "2"], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "theta"}], "]"}]}]}], ")"}], "4"], " ", 
         SuperscriptBox[
          RowBox[{"Csc", "[", "theta", "]"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              SuperscriptBox["r", "2"]}], ")"}], "2"], "-", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              RowBox[{"r", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}]}]}], 
             ")"}], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "theta", "]"}], "2"]}]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{"4", " ", "a", " ", "M", " ", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["a", "2"], "-", 
                RowBox[{"2", " ", 
                 SuperscriptBox["r", "2"]}], "+", 
                RowBox[{
                 SuperscriptBox["a", "2"], " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "theta"}], "]"}]}]}], ")"}], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "theta", "]"}], "2"]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["a", "2"], "+", 
                RowBox[{"2", " ", 
                 SuperscriptBox["r", "2"]}], "+", 
                RowBox[{
                 SuperscriptBox["a", "2"], " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "theta"}], "]"}]}]}], ")"}], "2"]], "+", 
            RowBox[{"\[Sqrt]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"4", " ", "M", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["a", "2"], "-", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["r", "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox["a", "2"], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "theta"}], "]"}]}]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["a", "4"], " ", "M"}], "+", 
                    RowBox[{"3", " ", 
                    SuperscriptBox["a", "4"], " ", "r"}], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["a", "2"], " ", "M", " ", 
                    SuperscriptBox["r", "2"]}], "+", 
                    RowBox[{"8", " ", 
                    SuperscriptBox["a", "2"], " ", 
                    SuperscriptBox["r", "3"]}], "+", 
                    RowBox[{"8", " ", 
                    SuperscriptBox["r", "5"]}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["a", "2"], " ", "r", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["a", "2"], "+", 
                    RowBox[{"r", " ", 
                    RowBox[{"(", 
                    RowBox[{"M", "+", 
                    RowBox[{"2", " ", "r"}]}], ")"}]}]}], ")"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "theta"}], "]"}]}], "-", 
                    RowBox[{
                    SuperscriptBox["a", "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{"M", "-", "r"}], ")"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"4", " ", "theta"}], "]"}]}]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "theta", "]"}], "2"]}], ")"}], "/", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["a", "2"], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["r", "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox["a", "2"], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "theta"}], "]"}]}]}], ")"}], "4"]}], 
                 ")"}]}], "+", 
               FractionBox[
                RowBox[{"16", " ", 
                 SuperscriptBox["a", "2"], " ", 
                 SuperscriptBox["M", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox["a", "2"], "-", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["r", "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox["a", "2"], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "theta"}], "]"}]}]}], ")"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Sin", "[", "theta", "]"}], "4"]}], 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["a", "2"], "+", 
                   RowBox[{"2", " ", 
                    SuperscriptBox["r", "2"]}], "+", 
                   RowBox[{
                    SuperscriptBox["a", "2"], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "theta"}], "]"}]}]}], ")"}], "4"]]}], 
              ")"}]}]}], ")"}], "2"]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["a", "4"], " ", "M"}], "+", 
            RowBox[{"3", " ", 
             SuperscriptBox["a", "4"], " ", "r"}], "-", 
            RowBox[{"4", " ", 
             SuperscriptBox["a", "2"], " ", "M", " ", 
             SuperscriptBox["r", "2"]}], "+", 
            RowBox[{"8", " ", 
             SuperscriptBox["a", "2"], " ", 
             SuperscriptBox["r", "3"]}], "+", 
            RowBox[{"8", " ", 
             SuperscriptBox["r", "5"]}], "+", 
            RowBox[{"4", " ", 
             SuperscriptBox["a", "2"], " ", "r", " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["a", "2"], "+", 
               RowBox[{"r", " ", 
                RowBox[{"(", 
                 RowBox[{"M", "+", 
                  RowBox[{"2", " ", "r"}]}], ")"}]}]}], ")"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "theta"}], "]"}]}], "-", 
            RowBox[{
             SuperscriptBox["a", "4"], " ", 
             RowBox[{"(", 
              RowBox[{"M", "-", "r"}], ")"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"4", " ", "theta"}], "]"}]}]}], ")"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["a", "2"], "+", 
            SuperscriptBox["r", "2"], "-", 
            RowBox[{
             SuperscriptBox["a", "2"], " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "theta", "]"}], "2"]}]}], ")"}], "2"]}], 
        ")"}]}]}], ")"}]}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{"1", "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"ktkp", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["r", "2"]}], "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "theta"}], "]"}]}]}], ")"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"Csc", "[", "theta", "]"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{"4", " ", "a", " ", "M", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["a", "2"], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["r", "2"]}], "+", 
             RowBox[{
              SuperscriptBox["a", "2"], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "theta"}], "]"}]}]}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "theta", "]"}], "2"]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["a", "2"], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["r", "2"]}], "+", 
             RowBox[{
              SuperscriptBox["a", "2"], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "theta"}], "]"}]}]}], ")"}], "2"]], "+", 
         RowBox[{"\[Sqrt]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"4", " ", "M", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["a", "2"], "-", 
                   RowBox[{"2", " ", 
                    SuperscriptBox["r", "2"]}], "+", 
                   RowBox[{
                    SuperscriptBox["a", "2"], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "theta"}], "]"}]}]}], ")"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    SuperscriptBox["a", "4"], " ", "M"}], "+", 
                   RowBox[{"3", " ", 
                    SuperscriptBox["a", "4"], " ", "r"}], "-", 
                   RowBox[{"4", " ", 
                    SuperscriptBox["a", "2"], " ", "M", " ", 
                    SuperscriptBox["r", "2"]}], "+", 
                   RowBox[{"8", " ", 
                    SuperscriptBox["a", "2"], " ", 
                    SuperscriptBox["r", "3"]}], "+", 
                   RowBox[{"8", " ", 
                    SuperscriptBox["r", "5"]}], "+", 
                   RowBox[{"4", " ", 
                    SuperscriptBox["a", "2"], " ", "r", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["a", "2"], "+", 
                    RowBox[{"r", " ", 
                    RowBox[{"(", 
                    RowBox[{"M", "+", 
                    RowBox[{"2", " ", "r"}]}], ")"}]}]}], ")"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "theta"}], "]"}]}], "-", 
                   RowBox[{
                    SuperscriptBox["a", "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{"M", "-", "r"}], ")"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"4", " ", "theta"}], "]"}]}]}], ")"}], " ", 
                 SuperscriptBox[
                  RowBox[{"Sin", "[", "theta", "]"}], "2"]}], ")"}], "/", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["a", "2"], "+", 
                  RowBox[{"2", " ", 
                   SuperscriptBox["r", "2"]}], "+", 
                  RowBox[{
                   SuperscriptBox["a", "2"], " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "theta"}], "]"}]}]}], ")"}], "4"]}], 
              ")"}]}], "+", 
            FractionBox[
             RowBox[{"16", " ", 
              SuperscriptBox["a", "2"], " ", 
              SuperscriptBox["M", "2"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox["a", "2"], "-", 
                 RowBox[{"2", " ", 
                  SuperscriptBox["r", "2"]}], "+", 
                 RowBox[{
                  SuperscriptBox["a", "2"], " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "theta"}], "]"}]}]}], ")"}], "2"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "theta", "]"}], "4"]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["a", "2"], "+", 
                RowBox[{"2", " ", 
                 SuperscriptBox["r", "2"]}], "+", 
                RowBox[{
                 SuperscriptBox["a", "2"], " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "theta"}], "]"}]}]}], ")"}], "4"]]}], 
           ")"}]}]}], ")"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["a", "4"], " ", "M"}], "+", 
       RowBox[{"3", " ", 
        SuperscriptBox["a", "4"], " ", "r"}], "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["a", "2"], " ", "M", " ", 
        SuperscriptBox["r", "2"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["r", "3"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["r", "5"]}], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["a", "2"], " ", "r", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          RowBox[{"r", " ", 
           RowBox[{"(", 
            RowBox[{"M", "+", 
             RowBox[{"2", " ", "r"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "theta"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox["a", "4"], " ", 
        RowBox[{"(", 
         RowBox[{"M", "-", "r"}], ")"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"4", " ", "theta"}], "]"}]}]}], ")"}]}]}], ")"}]}]], "Output",
 CellLabel->
  "Out[50]= ",ExpressionUUID->"1a8db8b9-5068-4d39-af26-da76badd37ef"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"se", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"G", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "+", 
        RowBox[{
         RowBox[{
          RowBox[{"G", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "4", "]"}], "]"}], "*", "omega"}]}], ")"}]}], "*", 
     "uet"}], "/.", 
    RowBox[{"theta", "->", 
     RowBox[{"Pi", "/", "2"}]}]}]}], ";"}]], "Input",ExpressionUUID->\
"9ddc39d6-4071-4a4e-8292-68cc167d6548"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Lzsub", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"G", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", 
         RowBox[{"[", "4", "]"}], "]"}], "+", 
        RowBox[{
         RowBox[{
          RowBox[{"G", "[", 
           RowBox[{"[", "4", "]"}], "]"}], "[", 
          RowBox[{"[", "4", "]"}], "]"}], "*", "omega"}]}], ")"}]}], "*", 
     "uet"}], "/.", 
    RowBox[{"theta", "->", 
     RowBox[{"Pi", "/", "2"}]}]}]}], ";"}]], "Input",ExpressionUUID->\
"aa32c258-2aaa-4fdc-bff4-2b0bcd0c75e8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["ISCO", "Chapter",ExpressionUUID->"6a9fab9a-ee1a-41ed-9693-24cda3f04fc5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"equE", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"gttS", "*", "dt"}], "+", 
      RowBox[{"gtrS", "*", "dr"}], "+", 
      RowBox[{"gtpS", "*", "dp"}]}], "==", 
     RowBox[{"-", "E"}]}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"equL", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"gtpS", "*", "dt"}], "+", 
      RowBox[{"grpS", "*", "dr"}], "+", 
      RowBox[{"gppS", "*", "dp"}]}], "==", "Lz"}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"equU", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"gttS", "*", 
       RowBox[{"dt", "^", "2"}]}], "+", 
      RowBox[{"grrS", "*", 
       RowBox[{"dr", "^", "2"}]}], "+", 
      RowBox[{"gppS", "*", 
       RowBox[{"dp", "^", "2"}]}], "+", 
      RowBox[{"2", "*", "gtrS", "*", "dt", "*", "dr"}], "+", 
      RowBox[{"2", "*", "grpS", "*", "dr", "*", "dp"}], "+", 
      RowBox[{"2", "*", "gtpS", "*", "dt", "*", "dp"}]}], "==", 
     RowBox[{"-", "1"}]}], ")"}]}], ";"}], "\n", 
 RowBox[{}], "\n", 
 RowBox[{
  RowBox[{"equEalt", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"gttS", "*", "dt"}], "+", 
      RowBox[{"gtpS", "*", "dp"}]}], "==", 
     RowBox[{"-", "E"}]}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"equLalt", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"gtpS", "*", "dt"}], "+", 
      RowBox[{"gppS", "*", "dp"}]}], "==", "Lz"}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"equUalt", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"gttS", "*", 
       RowBox[{"dt", "^", "2"}]}], "+", 
      RowBox[{"grrS", "*", 
       RowBox[{"dr", "^", "2"}]}], "+", 
      RowBox[{"gppS", "*", 
       RowBox[{"dp", "^", "2"}]}], "+", 
      RowBox[{"2", "*", "gtpS", "*", "dt", "*", "dp"}]}], "==", 
     RowBox[{"-", "1"}]}], ")"}]}], ";"}], "\n", 
 RowBox[{}], "\n", 
 RowBox[{
  RowBox[{"set", "=", 
   RowBox[{"{", 
    RowBox[{"equE", ",", "equL", ",", "equU"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"set", "=", 
   RowBox[{"{", 
    RowBox[{"equEalt", ",", "equLalt", ",", "equUalt"}], "}"}]}], 
  ";"}]}], "Input",ExpressionUUID->"46ce9bea-7ee1-4ff1-bf82-5f3d8c49e452"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Solve", "[", 
    RowBox[{"set", ",", 
     RowBox[{"{", 
      RowBox[{"dt", ",", "dp", ",", "dr"}], "}"}]}], "]"}], "]"}]}]], "Input",\
ExpressionUUID->"7b62931d-4fc1-467e-bd1a-aa0f38754256"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"dt", "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"\[ExponentialE]", " ", "gppS"}], "+", 
        RowBox[{"gtpS", " ", "Lz"}]}], 
       RowBox[{
        SuperscriptBox["gtpS", "2"], "-", 
        RowBox[{"gppS", " ", "gttS"}]}]]}], ",", 
     RowBox[{"dp", "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"\[ExponentialE]", " ", "gtpS"}], "+", 
        RowBox[{"gttS", " ", "Lz"}]}], 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["gtpS", "2"]}], "+", 
        RowBox[{"gppS", " ", "gttS"}]}]]}], ",", 
     RowBox[{"dr", "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        SqrtBox[
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", "2"], " ", "gppS"}], ")"}]}], 
          "+", 
          SuperscriptBox["gtpS", "2"], "-", 
          RowBox[{"2", " ", "\[ExponentialE]", " ", "gtpS", " ", "Lz"}], "-", 
          RowBox[{"gttS", " ", 
           RowBox[{"(", 
            RowBox[{"gppS", "+", 
             SuperscriptBox["Lz", "2"]}], ")"}]}]}]], 
        SqrtBox[
         RowBox[{"grrS", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["gtpS", "2"]}], "+", 
            RowBox[{"gppS", " ", "gttS"}]}], ")"}]}]]]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"dt", "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"\[ExponentialE]", " ", "gppS"}], "+", 
        RowBox[{"gtpS", " ", "Lz"}]}], 
       RowBox[{
        SuperscriptBox["gtpS", "2"], "-", 
        RowBox[{"gppS", " ", "gttS"}]}]]}], ",", 
     RowBox[{"dp", "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"\[ExponentialE]", " ", "gtpS"}], "+", 
        RowBox[{"gttS", " ", "Lz"}]}], 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["gtpS", "2"]}], "+", 
        RowBox[{"gppS", " ", "gttS"}]}]]}], ",", 
     RowBox[{"dr", "\[Rule]", 
      FractionBox[
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", "2"], " ", "gppS"}], ")"}]}], 
         "+", 
         SuperscriptBox["gtpS", "2"], "-", 
         RowBox[{"2", " ", "\[ExponentialE]", " ", "gtpS", " ", "Lz"}], "-", 
         RowBox[{"gttS", " ", 
          RowBox[{"(", 
           RowBox[{"gppS", "+", 
            SuperscriptBox["Lz", "2"]}], ")"}]}]}]], 
       SqrtBox[
        RowBox[{"grrS", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["gtpS", "2"]}], "+", 
           RowBox[{"gppS", " ", "gttS"}]}], ")"}]}]]]}]}], "}"}]}], 
  "}"}]], "Output",
 CellLabel->
  "Out[61]= ",ExpressionUUID->"e7e41448-faae-4cd2-b0d6-f2cedf975da8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Veff", "=", 
   RowBox[{
    RowBox[{"grrS", "*", "dr", "*", "dr"}], "/.", 
    RowBox[{"sol", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{"Veff", "=", 
  RowBox[{"Simplify", "[", "Veff", "]"}]}]}], "Input",ExpressionUUID->\
"aa33d9ec-48b8-4401-b8d0-461b180254ba"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    SuperscriptBox["\[ExponentialE]", "2"], " ", "gppS"}], "-", 
   SuperscriptBox["gtpS", "2"], "+", 
   RowBox[{"2", " ", "\[ExponentialE]", " ", "gtpS", " ", "Lz"}], "+", 
   RowBox[{"gttS", " ", 
    RowBox[{"(", 
     RowBox[{"gppS", "+", 
      SuperscriptBox["Lz", "2"]}], ")"}]}]}], 
  RowBox[{
   SuperscriptBox["gtpS", "2"], "-", 
   RowBox[{"gppS", " ", "gttS"}]}]]], "Output",
 CellLabel->
  "Out[63]= ",ExpressionUUID->"9db1e840-622f-4afb-bf6f-cdf0619b12bb"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"subs", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"gttS", "->", "gtt"}], ",", 
     RowBox[{"grrS", "->", "grr"}], ",", 
     RowBox[{"gththS", "->", "gthth"}], ",", 
     RowBox[{"gppS", "->", "gpp"}], ",", 
     RowBox[{"gtrS", "->", "gtr"}], ",", 
     RowBox[{"gtpS", "->", "gtp"}], ",", 
     RowBox[{"grpS", "->", "grp"}], ",", 
     RowBox[{"theta", "->", 
      RowBox[{"Pi", "/", "2"}]}]}], "}"}]}], ";"}]], "Input",ExpressionUUID->\
"3a43b61b-082b-4320-9e03-b043e877d78e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Veffsub", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Veff", "/.", "subs"}], ")"}], "/.", 
    RowBox[{"theta", "->", 
     RowBox[{"Pi", "/", "2"}]}]}], "]"}]}]], "Input",ExpressionUUID->\
"67ac3e28-33b4-4f6f-a337-c852158415ed"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    RowBox[{"-", "4"}], " ", "a", " ", "\[ExponentialE]", " ", "Lz", " ", 
    "M"}], "+", 
   RowBox[{
    SuperscriptBox["Lz", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", "M"}], "-", "r"}], ")"}]}], "+", 
   RowBox[{
    SuperscriptBox["r", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", "M"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[ExponentialE]", "2"]}], ")"}], " ", "r"}]}], 
     ")"}]}], "+", 
   RowBox[{
    SuperscriptBox["a", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "r"}], "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "M"}], "+", "r"}], ")"}]}]}], ")"}]}]}], 
  RowBox[{"r", " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["a", "2"], "+", 
     RowBox[{"r", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}]}]}], 
    ")"}]}]]], "Output",
 CellLabel->
  "Out[65]= ",ExpressionUUID->"ceab6c1b-bc38-48f8-8216-9d2f224d707c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"d2Veffsub", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"D", "[", 
    RowBox[{"Veffsub", ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "2"}], "}"}]}], "]"}], "]"}]}]], "Input",ExpressionUUI\
D->"772ae907-1055-4aed-92ed-de40d204ba2c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", 
       SuperscriptBox["a", "6"], " ", 
       SuperscriptBox["\[ExponentialE]", "2"], " ", "M"}], "-", 
      RowBox[{"4", " ", 
       SuperscriptBox["a", "5"], " ", "\[ExponentialE]", " ", "Lz", " ", 
       "M"}], "+", 
      RowBox[{"12", " ", 
       SuperscriptBox["a", "3"], " ", "\[ExponentialE]", " ", "Lz", " ", "M", 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "M"}], "-", "r"}], ")"}], " ", "r"}], "-", 
      RowBox[{"8", " ", "a", " ", "\[ExponentialE]", " ", "Lz", " ", "M", " ", 
       SuperscriptBox["r", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"6", " ", 
          SuperscriptBox["M", "2"]}], "-", 
         RowBox[{"8", " ", "M", " ", "r"}], "+", 
         RowBox[{"3", " ", 
          SuperscriptBox["r", "2"]}]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox["r", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", " ", 
          SuperscriptBox["Lz", "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "M"}], "-", "r"}], ")"}], "3"]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["\[ExponentialE]", "2"], " ", "M", " ", 
          SuperscriptBox["r", "4"]}]}], ")"}]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["a", "4"], " ", "M", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["Lz", "2"], "+", 
         RowBox[{"3", " ", 
          SuperscriptBox["\[ExponentialE]", "2"], " ", "r", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}]}]}], ")"}]}], 
      "+", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", "r", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["Lz", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "12"}], " ", 
             SuperscriptBox["M", "2"]}], "+", 
            RowBox[{"6", " ", "M", " ", "r"}], "+", 
            SuperscriptBox["r", "2"]}], ")"}]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["\[ExponentialE]", "2"], " ", "M", " ", "r", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"12", " ", 
             SuperscriptBox["M", "2"]}], "-", 
            RowBox[{"14", " ", "M", " ", "r"}], "+", 
            RowBox[{"3", " ", 
             SuperscriptBox["r", "2"]}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
   ")"}], "/", 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox["r", "3"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["a", "2"], "+", 
       RowBox[{"r", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}]}]}], ")"}], 
     "3"]}], ")"}]}]], "Output",
 CellLabel->
  "Out[66]= ",ExpressionUUID->"e8e0085a-88cd-41e9-8644-0dc3d79aa8a3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Convert to C Code", "Chapter",ExpressionUUID->"e86d589f-18e4-4664-b1eb-8bec6e487813"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"::", "Package"}], "::"}], "*)"}]}], "\n", 
 RowBox[{}], "\n", 
 RowBox[{"BeginPackage", "[", "\"\<OptimizeExpressionToC`\>\"", "]"}], "\n", 
 RowBox[{}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"OptimizeExpressionToC", "::", "usage"}], "=", 
   "\"\<Generates optimized version of expression in C\>\""}], ";"}], "\n", 
 RowBox[{}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ExtractTags", "::", "usage"}], "=", "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ClearTagText", "::", "usage"}], "=", "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TagExistQ", "::", "usage"}], "=", "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AppendToTag", "::", "usage"}], "=", "\"\<\>\""}], ";"}], "\n", 
 RowBox[{}], "\n", 
 RowBox[{"Begin", "[", "\"\<Private`\>\"", "]"}], "\n", 
 RowBox[{}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"OptimizeExpressionToC", "[", "expr_List", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "optimizedExpr", ",", "mainExpr", ",", "n", ",", "m", ",", "defs", ",", 
       "output"}], "}"}], ",", 
     RowBox[{
      RowBox[{"optimizedExpr", "=", 
       RowBox[{"Experimental`OptimizeExpression", "[", "expr", "]"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ToString", "@", 
          RowBox[{"optimizedExpr", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "0"}], "]"}], "]"}]}], "==", "\"\<Block\>\""}], 
        ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"n", "=", 
           RowBox[{"Length", "[", 
            RowBox[{"optimizedExpr", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}]}], ";", 
          RowBox[{"mainExpr", "=", 
           RowBox[{"optimizedExpr", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "2", ",", 
              RowBox[{"n", "+", "1"}]}], "]"}], "]"}]}], ";"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"n", "=", "0"}], ";", 
          RowBox[{"mainExpr", "=", 
           RowBox[{"Flatten", "@", 
            RowBox[{"{", 
             RowBox[{"optimizedExpr", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "}"}]}]}], ";"}], "}"}]}], 
       "]"}], ";", 
      RowBox[{"m", "=", 
       RowBox[{"Length", "[", "mainExpr", "]"}]}], ";", 
      RowBox[{"defs", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"\"\<double \>\"", "<>", 
          RowBox[{"ToString", "@", 
           RowBox[{"CForm", "@", 
            RowBox[{"optimizedExpr", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "2", ",", "i", ",", "1"}], "]"}], "]"}]}]}], 
          "<>", "\"\< = \>\"", "<>", 
          RowBox[{"ToString", "@", 
           RowBox[{"CForm", "@", 
            RowBox[{"optimizedExpr", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "2", ",", "i", ",", "2"}], "]"}], "]"}]}]}], 
          "<>", "\"\<;\>\""}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";", 
      RowBox[{"output", "=", 
       RowBox[{"MapIndexed", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"\"\<out(\>\"", "<>", 
           RowBox[{"StringJoin", "@", 
            RowBox[{"Riffle", "[", 
             RowBox[{
              RowBox[{"ToString", "/@", 
               RowBox[{"(", 
                RowBox[{"#2", "-", "1"}], ")"}]}], ",", "\"\<\>\""}], "]"}]}],
            "<>", "\"\<) = \>\"", "<>", 
           RowBox[{"ToString", "@", 
            RowBox[{"CForm", "@", "#1"}]}], "<>", "\"\<;\>\""}], "&"}], ",", 
         "mainExpr", ",", 
         RowBox[{"{", 
          RowBox[{"ArrayDepth", "[", "mainExpr", "]"}], "}"}]}], "]"}]}], ";", 
      RowBox[{"StringReplace", "[", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{"defs", ",", "output"}], "]"}], ",", 
        RowBox[{"\"\<Compile_$\>\"", "->", "\"\<t\>\""}]}], "]"}]}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{}], "\n", 
 RowBox[{"End", "[", "]"}], "\n", , "\n", 
 RowBox[{}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ExtractTags", "[", "string_String", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"regex", ",", "extractTag"}], "}"}], ",", 
     RowBox[{
      RowBox[{"regex", "=", 
       RowBox[{
       "RegularExpression", "[", 
        "\"\<\\\\n([^\\\\n]*)// (\\\\[|</?)([^\\\\]\\\\n]*)(\\\\]|>)[^\\\\n]*\
\\\\n\>\"", "]"}]}], ";", 
      RowBox[{
       RowBox[{"extractTag", "[", "bounds_", "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "substring", ",", "indentation", ",", "tagType", ",", "tag"}], 
          "}"}], ",", 
         RowBox[{
          RowBox[{"substring", "=", 
           RowBox[{"StringTake", "[", 
            RowBox[{"string", ",", "bounds"}], "]"}]}], ";", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{"indentation", ",", "tagType", ",", "tag"}], "}"}], 
            "}"}], "=", 
           RowBox[{"StringCases", "[", 
            RowBox[{"substring", ",", 
             RowBox[{"regex", "->", 
              RowBox[{"{", 
               RowBox[{"\"\<$1\>\"", ",", "\"\<$2\>\"", ",", "\"\<$3\>\""}], 
               "}"}]}]}], "]"}]}], ";", 
          RowBox[{"Association", "[", 
           RowBox[{
            RowBox[{"\"\<indentation\>\"", "->", "indentation"}], ",", 
            RowBox[{"\"\<tagType\>\"", "->", "tagType"}], ",", 
            RowBox[{"\"\<tag\>\"", "->", "tag"}], ",", 
            RowBox[{"\"\<start\>\"", "->", 
             RowBox[{
              RowBox[{"bounds", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "+", "1"}]}], ",", 
            RowBox[{"\"\<end\>\"", "->", 
             RowBox[{"bounds", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{
        RowBox[{"extractTag", "[", "#", "]"}], "&"}], "/@", 
       RowBox[{"StringPosition", "[", 
        RowBox[{"string", ",", "regex"}], "]"}]}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TagExistQ", "[", 
    RowBox[{"string_String", ",", "tag_String"}], "]"}], ":=", 
   RowBox[{"AnyTrue", "[", 
    RowBox[{
     RowBox[{"ExtractTags", "[", "string", "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "\"\<tag\>\"", "]"}], "]"}], "==", "tag"}], "&"}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{}], "\n", 
 RowBox[{
  RowBox[{"ClearTagText", "[", 
   RowBox[{"string_String", ",", "tag_String"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tags", ",", "startTag", ",", "endTag", ",", "x"}], "}"}], ",", 
    RowBox[{
     RowBox[{"tags", "=", 
      RowBox[{"ExtractTags", "[", "string", "]"}]}], ";", 
     RowBox[{"startTag", "=", 
      RowBox[{"FirstCase", "[", 
       RowBox[{"tags", ",", 
        RowBox[{"x_", "/;", 
         RowBox[{
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "\"\<tag\>\"", "]"}], "]"}], "==", "tag"}], "&&", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "\"\<tagType\>\"", "]"}], "]"}], "==", 
           "\"\<<\>\""}]}]}]}], "]"}]}], ";", 
     RowBox[{"endTag", "=", 
      RowBox[{"FirstCase", "[", 
       RowBox[{"tags", ",", 
        RowBox[{"x_", "/;", 
         RowBox[{
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "\"\<tag\>\"", "]"}], "]"}], "==", "tag"}], "&&", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "\"\<tagType\>\"", "]"}], "]"}], "==", 
           "\"\<</\>\""}]}]}]}], "]"}]}], ";", 
     RowBox[{
      RowBox[{"StringTake", "[", 
       RowBox[{"string", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"startTag", "[", 
           RowBox[{"[", "\"\<end\>\"", "]"}], "]"}]}], "}"}]}], "]"}], "<>", 
      RowBox[{"StringTake", "[", 
       RowBox[{"string", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"endTag", "[", 
           RowBox[{"[", "\"\<start\>\"", "]"}], "]"}], ",", 
          RowBox[{"StringLength", "[", "string", "]"}]}], "}"}]}], 
       "]"}]}]}]}], "]"}]}], "\n", 
 RowBox[{}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AppendToTag", "[", 
    RowBox[{"string_String", ",", "tag_String", ",", "linesToAppend_List"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tags", ",", "startTag", ",", "indent", ",", "x"}], "}"}], ",", 
     RowBox[{
      RowBox[{"tags", "=", 
       RowBox[{"ExtractTags", "[", "string", "]"}]}], ";", 
      RowBox[{"startTag", "=", 
       RowBox[{"FirstCase", "[", 
        RowBox[{"tags", ",", 
         RowBox[{"x_", "/;", 
          RowBox[{
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"[", "\"\<tag\>\"", "]"}], "]"}], "==", "tag"}], "&&", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"[", "\"\<tagType\>\"", "]"}], "]"}], "==", 
            "\"\<<\>\""}]}]}]}], "]"}]}], ";", 
      RowBox[{"indent", "=", 
       RowBox[{"startTag", "[", 
        RowBox[{"[", "\"\<indentation\>\"", "]"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"StringTake", "[", 
        RowBox[{"string", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"startTag", "[", 
            RowBox[{"[", "\"\<end\>\"", "]"}], "]"}]}], "}"}]}], "]"}], "<>", 
       RowBox[{"StringRiffle", "[", 
        RowBox[{"linesToAppend", ",", 
         RowBox[{"{", 
          RowBox[{"indent", ",", 
           RowBox[{"\"\<\\n\>\"", "<>", "indent"}], ",", "\"\<\\n\>\""}], 
          "}"}]}], "]"}], "<>", 
       RowBox[{"StringTake", "[", 
        RowBox[{"string", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"startTag", "[", 
             RowBox[{"[", "\"\<end\>\"", "]"}], "]"}], "+", "1"}], ",", 
           RowBox[{"StringLength", "[", "string", "]"}]}], "}"}]}], 
        "]"}]}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AppendToTag", "[", 
    RowBox[{
    "string_String", ",", "tag_String", ",", "stringToAppend_String"}], "]"}],
    ":=", 
   RowBox[{"AppendToTag", "[", 
    RowBox[{"string", ",", "tag", ",", 
     RowBox[{"StringSplit", "[", 
      RowBox[{"stringToAppend", ",", "\"\<\\n\>\""}], "]"}]}], "]"}]}], 
  ";"}], "\n", , "\n", 
 RowBox[{}], "\n", 
 RowBox[{"EndPackage", "[", "]"}]}], "Input",ExpressionUUID->"137e3024-21ad-\
41f9-b72a-1714ffab989e"],

Cell[BoxData["\<\"OptimizeExpressionToC`\"\>"], "Output",
 CellLabel->
  "Out[67]= ",ExpressionUUID->"7dbbc1d3-8841-45a3-8be8-47e430d75fce"],

Cell[BoxData["\<\"Private`\"\>"], "Output",
 CellLabel->
  "Out[73]= ",ExpressionUUID->"0258816b-5e95-4e64-aaac-909b12827129"],

Cell[BoxData["\<\"Private`\"\>"], "Output",
 CellLabel->
  "Out[75]= ",ExpressionUUID->"cf865c7f-a371-431e-b8a8-492cea35be6d"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"M", "=", "1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"a", "=", "spin"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"theta", "=", "th"}], ";"}]}], "Input",ExpressionUUID->"e41fa0bd-\
dbd5-4f97-bb77-0663ef45a035"],

Cell[CellGroupData[{

Cell["Metric Components", "Section",ExpressionUUID->"5848865e-2756-4207-958b-9c2504a6e64c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"OptimizeExpressionToC", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"G", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"G", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"G", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"G", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"G", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"G", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"G", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"G", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"G", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"G", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"G", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"G", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"G", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"G", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"G", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"G", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "[", 
      RowBox[{"[", "4", "]"}], "]"}]}], "}"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"meat", "=", 
   RowBox[{"ToString", "[", 
    RowBox[{"Column", "[", 
     RowBox[{"StringReplace", "[", 
      RowBox[{"%", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<Sqrt\>\"", "->", "\"\<sqrt\>\""}], ",", 
         RowBox[{"\"\<Power(E,\>\"", "->", "\"\<exp(\>\""}], ",", 
         RowBox[{"\"\<Power\>\"", "->", "\"\<pow\>\""}], ",", 
         RowBox[{"\"\<Sin\>\"", "->", "\"\<sin\>\""}], ",", 
         RowBox[{"\"\<Cos\>\"", "->", "\"\<cos\>\""}], ",", 
         RowBox[{"\"\<Csc\>\"", "->", "\"\<1/sin\>\""}], ",", 
         RowBox[{"\"\<Cot\>\"", "->", "\"\<1/tan\>\""}], ",", 
         RowBox[{"\"\<double\>\"", "->", "\"\<long double\>\""}], ",", 
         RowBox[{"\"\<;,\>\"", "->", "\"\<;\\n    \>\""}], ",", 
         RowBox[{"\"\<out(0)\>\"", "->", "\"\<g[0][0]\>\""}], ",", 
         RowBox[{"\"\<out(1)\>\"", "->", "\"\<g[0][1]\>\""}], ",", 
         RowBox[{"\"\<out(2)\>\"", "->", "\"\<g[0][2]\>\""}], ",", 
         RowBox[{"\"\<out(3)\>\"", "->", "\"\<g[0][3]\>\""}], ",", 
         RowBox[{"\"\<out(4)\>\"", "->", "\"\<g[1][0]\>\""}], ",", 
         RowBox[{"\"\<out(5)\>\"", "->", "\"\<g[1][1]\>\""}], ",", 
         RowBox[{"\"\<out(6)\>\"", "->", "\"\<g[1][2]\>\""}], ",", 
         RowBox[{"\"\<out(7)\>\"", "->", "\"\<g[1][3]\>\""}], ",", 
         RowBox[{"\"\<out(8)\>\"", "->", "\"\<g[2][0]\>\""}], ",", 
         RowBox[{"\"\<out(9)\>\"", "->", "\"\<g[2][1]\>\""}], ",", 
         RowBox[{"\"\<out(10)\>\"", "->", "\"\<g[2][2]\>\""}], ",", 
         RowBox[{"\"\<out(11)\>\"", "->", "\"\<g[2][3]\>\""}], ",", 
         RowBox[{"\"\<out(12)\>\"", "->", "\"\<g[3][0]\>\""}], ",", 
         RowBox[{"\"\<out(13)\>\"", "->", "\"\<g[3][1]\>\""}], ",", 
         RowBox[{"\"\<out(14)\>\"", "->", "\"\<g[3][2]\>\""}], ",", 
         RowBox[{"\"\<out(15)\>\"", "->", "\"\<g[3][3]\>\""}]}], "}"}]}], 
      "]"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "header", "=", 
   "\"\<void metric(long double r, long double th, long double \
g[4][4])\\n{\\n\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"footer", "=", "\"\<\\n}\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"metric", "=", 
   RowBox[{"header", "<>", "meat", "<>", "footer"}]}], ";"}]}], "Input",Expres\
sionUUID->"804ea68d-e521-4a65-b8cf-9e6fefd84ac0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Metric r derivatives", "Section",ExpressionUUID->"2eba0954-9138-4807-975f-0c24d529cc2d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"OptimizeExpressionToC", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"dGdr", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"dGdr", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"dGdr", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"dGdr", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"dGdr", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"dGdr", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"dGdr", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"dGdr", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"dGdr", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"dGdr", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"dGdr", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"dGdr", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"dGdr", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"dGdr", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"dGdr", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"dGdr", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "[", 
      RowBox[{"[", "4", "]"}], "]"}]}], "}"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"meat", "=", 
   RowBox[{"ToString", "[", 
    RowBox[{"Column", "[", 
     RowBox[{"StringReplace", "[", 
      RowBox[{"%", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<Sqrt\>\"", "->", "\"\<sqrt\>\""}], ",", 
         RowBox[{"\"\<Power(E,\>\"", "->", "\"\<exp(\>\""}], ",", 
         RowBox[{"\"\<Power\>\"", "->", "\"\<pow\>\""}], ",", 
         RowBox[{"\"\<Sin\>\"", "->", "\"\<sin\>\""}], ",", 
         RowBox[{"\"\<Cos\>\"", "->", "\"\<cos\>\""}], ",", 
         RowBox[{"\"\<Csc\>\"", "->", "\"\<1/sin\>\""}], ",", 
         RowBox[{"\"\<Cot\>\"", "->", "\"\<1/tan\>\""}], ",", 
         RowBox[{"\"\<double\>\"", "->", "\"\<long double\>\""}], ",", 
         RowBox[{"\"\<;,\>\"", "->", "\"\<;\\n    \>\""}], ",", 
         RowBox[{"\"\<out(0)\>\"", "->", "\"\<dg[0][0]\>\""}], ",", 
         RowBox[{"\"\<out(1)\>\"", "->", "\"\<dg[0][1]\>\""}], ",", 
         RowBox[{"\"\<out(2)\>\"", "->", "\"\<dg[0][2]\>\""}], ",", 
         RowBox[{"\"\<out(3)\>\"", "->", "\"\<dg[0][3]\>\""}], ",", 
         RowBox[{"\"\<out(4)\>\"", "->", "\"\<dg[1][0]\>\""}], ",", 
         RowBox[{"\"\<out(5)\>\"", "->", "\"\<dg[1][1]\>\""}], ",", 
         RowBox[{"\"\<out(6)\>\"", "->", "\"\<dg[1][2]\>\""}], ",", 
         RowBox[{"\"\<out(7)\>\"", "->", "\"\<dg[1][3]\>\""}], ",", 
         RowBox[{"\"\<out(8)\>\"", "->", "\"\<dg[2][0]\>\""}], ",", 
         RowBox[{"\"\<out(9)\>\"", "->", "\"\<dg[2][1]\>\""}], ",", 
         RowBox[{"\"\<out(10)\>\"", "->", "\"\<dg[2][2]\>\""}], ",", 
         RowBox[{"\"\<out(11)\>\"", "->", "\"\<dg[2][3]\>\""}], ",", 
         RowBox[{"\"\<out(12)\>\"", "->", "\"\<dg[3][0]\>\""}], ",", 
         RowBox[{"\"\<out(13)\>\"", "->", "\"\<dg[3][1]\>\""}], ",", 
         RowBox[{"\"\<out(14)\>\"", "->", "\"\<dg[3][2]\>\""}], ",", 
         RowBox[{"\"\<out(15)\>\"", "->", "\"\<dg[3][3]\>\""}]}], "}"}]}], 
      "]"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "header", "=", 
   "\"\<void metric_rderivatives(long double r, long double th, long double \
dg[4][4])\\n{\\n\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"footer", "=", "\"\<\\n}\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"metricdr", "=", 
   RowBox[{"header", "<>", "meat", "<>", "footer"}]}], ";"}]}], "Input",Expres\
sionUUID->"e2b72919-03b4-4f09-85dc-342265de28cf"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Metric r2 derivatives", "Section",ExpressionUUID->"9aff1f56-1e73-4dc2-81ac-907d64538398"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"OptimizeExpressionToC", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"dGdr2", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"dGdr2", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"dGdr2", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"dGdr2", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"dGdr2", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"dGdr2", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"dGdr2", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"dGdr2", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"dGdr2", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"dGdr2", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"dGdr2", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"dGdr2", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"dGdr2", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"dGdr2", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"dGdr2", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"dGdr2", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "[", 
      RowBox[{"[", "4", "]"}], "]"}]}], "}"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"meat", "=", 
   RowBox[{"ToString", "[", 
    RowBox[{"Column", "[", 
     RowBox[{"StringReplace", "[", 
      RowBox[{"%", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<Sqrt\>\"", "->", "\"\<sqrt\>\""}], ",", 
         RowBox[{"\"\<Power(E,\>\"", "->", "\"\<exp(\>\""}], ",", 
         RowBox[{"\"\<Power\>\"", "->", "\"\<pow\>\""}], ",", 
         RowBox[{"\"\<Sin\>\"", "->", "\"\<sin\>\""}], ",", 
         RowBox[{"\"\<Cos\>\"", "->", "\"\<cos\>\""}], ",", 
         RowBox[{"\"\<Csc\>\"", "->", "\"\<1/sin\>\""}], ",", 
         RowBox[{"\"\<Cot\>\"", "->", "\"\<1/tan\>\""}], ",", 
         RowBox[{"\"\<double\>\"", "->", "\"\<long double\>\""}], ",", 
         RowBox[{"\"\<;,\>\"", "->", "\"\<;\\n    \>\""}], ",", 
         RowBox[{"\"\<out(0)\>\"", "->", "\"\<dg2[0][0]\>\""}], ",", 
         RowBox[{"\"\<out(1)\>\"", "->", "\"\<dg2[0][1]\>\""}], ",", 
         RowBox[{"\"\<out(2)\>\"", "->", "\"\<dg2[0][2]\>\""}], ",", 
         RowBox[{"\"\<out(3)\>\"", "->", "\"\<dg2[0][3]\>\""}], ",", 
         RowBox[{"\"\<out(4)\>\"", "->", "\"\<dg2[1][0]\>\""}], ",", 
         RowBox[{"\"\<out(5)\>\"", "->", "\"\<dg2[1][1]\>\""}], ",", 
         RowBox[{"\"\<out(6)\>\"", "->", "\"\<dg2[1][2]\>\""}], ",", 
         RowBox[{"\"\<out(7)\>\"", "->", "\"\<dg2[1][3]\>\""}], ",", 
         RowBox[{"\"\<out(8)\>\"", "->", "\"\<dg2[2][0]\>\""}], ",", 
         RowBox[{"\"\<out(9)\>\"", "->", "\"\<dg2[2][1]\>\""}], ",", 
         RowBox[{"\"\<out(10)\>\"", "->", "\"\<dg2[2][2]\>\""}], ",", 
         RowBox[{"\"\<out(11)\>\"", "->", "\"\<dg2[2][3]\>\""}], ",", 
         RowBox[{"\"\<out(12)\>\"", "->", "\"\<dg2[3][0]\>\""}], ",", 
         RowBox[{"\"\<out(13)\>\"", "->", "\"\<dg2[3][1]\>\""}], ",", 
         RowBox[{"\"\<out(14)\>\"", "->", "\"\<dg2[3][2]\>\""}], ",", 
         RowBox[{"\"\<out(15)\>\"", "->", "\"\<dg2[3][3]\>\""}]}], "}"}]}], 
      "]"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "header", "=", 
   "\"\<void metric_r2derivatives(long double r, long double th, long double \
dg2[4][4])\\n{\\n\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"footer", "=", "\"\<\\n}\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"metricdr2", "=", 
   RowBox[{"header", "<>", "meat", "<>", "footer"}]}], ";"}]}], "Input",Expres\
sionUUID->"ef2c85ed-0a51-45e5-9483-ab7deb30f5ab"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Covariant Metric Components", "Section",ExpressionUUID->"f3b3dc00-db6d-46f0-8917-73c73ff3d04c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"OptimizeExpressionToC", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Ginv", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"Ginv", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"Ginv", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"Ginv", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"Ginv", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"Ginv", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"Ginv", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"Ginv", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"Ginv", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"Ginv", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"Ginv", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"Ginv", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"Ginv", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"Ginv", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"Ginv", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"Ginv", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "[", 
      RowBox[{"[", "4", "]"}], "]"}]}], "}"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"meet", "=", 
   RowBox[{"ToString", "[", 
    RowBox[{"Column", "[", 
     RowBox[{"StringReplace", "[", 
      RowBox[{"%", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<Sqrt\>\"", "->", "\"\<sqrt\>\""}], ",", 
         RowBox[{"\"\<Power(E,\>\"", "->", "\"\<exp(\>\""}], ",", 
         RowBox[{"\"\<Power\>\"", "->", "\"\<pow\>\""}], ",", 
         RowBox[{"\"\<Sin\>\"", "->", "\"\<sin\>\""}], ",", 
         RowBox[{"\"\<Cos\>\"", "->", "\"\<cos\>\""}], ",", 
         RowBox[{"\"\<Csc\>\"", "->", "\"\<1/sin\>\""}], ",", 
         RowBox[{"\"\<Cot\>\"", "->", "\"\<1/tan\>\""}], ",", 
         RowBox[{"\"\<double\>\"", "->", "\"\<long double\>\""}], ",", 
         RowBox[{"\"\<;,\>\"", "->", "\"\<;\\n    \>\""}], ",", 
         RowBox[{"\"\<out(0)\>\"", "->", "\"\<gu[0][0]\>\""}], ",", 
         RowBox[{"\"\<out(1)\>\"", "->", "\"\<gu[0][1]\>\""}], ",", 
         RowBox[{"\"\<out(2)\>\"", "->", "\"\<gu[0][2]\>\""}], ",", 
         RowBox[{"\"\<out(3)\>\"", "->", "\"\<gu[0][3]\>\""}], ",", 
         RowBox[{"\"\<out(4)\>\"", "->", "\"\<gu[1][0]\>\""}], ",", 
         RowBox[{"\"\<out(5)\>\"", "->", "\"\<gu[1][1]\>\""}], ",", 
         RowBox[{"\"\<out(6)\>\"", "->", "\"\<gu[1][2]\>\""}], ",", 
         RowBox[{"\"\<out(7)\>\"", "->", "\"\<gu[1][3]\>\""}], ",", 
         RowBox[{"\"\<out(8)\>\"", "->", "\"\<gu[2][0]\>\""}], ",", 
         RowBox[{"\"\<out(9)\>\"", "->", "\"\<gu[2][1]\>\""}], ",", 
         RowBox[{"\"\<out(10)\>\"", "->", "\"\<gu[2][2]\>\""}], ",", 
         RowBox[{"\"\<out(11)\>\"", "->", "\"\<gu[2][3]\>\""}], ",", 
         RowBox[{"\"\<out(12)\>\"", "->", "\"\<gu[3][0]\>\""}], ",", 
         RowBox[{"\"\<out(13)\>\"", "->", "\"\<gu[3][1]\>\""}], ",", 
         RowBox[{"\"\<out(14)\>\"", "->", "\"\<gu[3][2]\>\""}], ",", 
         RowBox[{"\"\<out(15)\>\"", "->", "\"\<gu[3][3]\>\""}]}], "}"}]}], 
      "]"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "header", "=", 
   "\"\<void uppermetric(long double r, long double th, long double gu[4][4])\
\\n{\\n\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"footer", "=", "\"\<\\n}\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"metricupper", "=", 
   RowBox[{"header", "<>", "meet", "<>", "footer"}]}], ";"}]}], "Input",Expres\
sionUUID->"af7e0d48-985d-461e-800a-a21f62cfdb0a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"output", "=", 
   RowBox[{
   "metric", "<>", "\"\<\\n\\n\>\"", "<>", "metricupper", "<>", 
    "\"\<\\n\\n\>\"", "<>", "metricdr", "<>", "\"\<\\n\\n\>\"", "<>", 
    "metricdr2"}]}], ";"}], "\n", 
 RowBox[{}], "\n", 
 RowBox[{"(*", 
  RowBox[{"write", "to", 
   RowBox[{"metric", ".", "cpp"}], "file"}], "*)"}], "\n", 
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\<C:\\\\Users\\\\WalkerXin\\\\Documents\\\\Scripts\\\\raytransfer\>\"", 
   "]"}], ";"}], "\n", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<metric.cpp\>\"", ",", "output", ",", "\"\<Text\>\""}], 
  "]"}]}], "Input",ExpressionUUID->"9e1be641-5d85-450e-b480-1cb75817f18e"],

Cell[BoxData["\<\"metric.cpp\"\>"], "Output",
 CellLabel->
  "Out[107]= ",ExpressionUUID->"31fc72fc-b7a5-4b73-9717-ad75d36b1fa7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Christoffel Symbols", "Section",ExpressionUUID->"97bc8269-6f4c-4e26-b57d-accba8b908ce"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"OptimizeExpressionToC", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "3", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "3", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "3", "]"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "3", "]"}], "]"}], "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "[", 
       RowBox[{"[", "3", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "[", 
       RowBox[{"[", "3", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "[", 
       RowBox[{"[", "3", "]"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "[", 
       RowBox[{"[", "3", "]"}], "]"}], "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "[", 
       RowBox[{"[", "3", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "[", 
       RowBox[{"[", "3", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "[", 
       RowBox[{"[", "3", "]"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "[", 
       RowBox[{"[", "3", "]"}], "]"}], "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "4", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "4", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "4", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "4", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "4", "]"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "4", "]"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "4", "]"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "4", "]"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "4", "]"}], "]"}], "[", 
       RowBox[{"[", "3", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "4", "]"}], "]"}], "[", 
       RowBox[{"[", "3", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "4", "]"}], "]"}], "[", 
       RowBox[{"[", "3", "]"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "4", "]"}], "]"}], "[", 
       RowBox[{"[", "3", "]"}], "]"}], "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "4", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "4", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "4", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Christ", "[", 
        RowBox[{"[", "4", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "[", 
      RowBox[{"[", "4", "]"}], "]"}]}], "}"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"meat", "=", 
   RowBox[{"ToString", "[", 
    RowBox[{"Column", "[", 
     RowBox[{"StringReplace", "[", 
      RowBox[{"%", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<Sqrt\>\"", "->", "\"\<sqrt\>\""}], ",", 
         RowBox[{"\"\<Power(E,\>\"", "->", "\"\<exp(\>\""}], ",", 
         RowBox[{"\"\<Power\>\"", "->", "\"\<pow\>\""}], ",", 
         RowBox[{"\"\<Sin\>\"", "->", "\"\<sin\>\""}], ",", 
         RowBox[{"\"\<Cos\>\"", "->", "\"\<cos\>\""}], ",", 
         RowBox[{"\"\<Csc\>\"", "->", "\"\<1/sin\>\""}], ",", 
         RowBox[{"\"\<Cot\>\"", "->", "\"\<1/tan\>\""}], ",", 
         RowBox[{"\"\<double\>\"", "->", "\"\<long double\>\""}], ",", 
         RowBox[{"\"\<;,\>\"", "->", "\"\<;\\n    \>\""}], ",", 
         RowBox[{"\"\<out(0)\>\"", "->", "\"\<christ[0][0][0]\>\""}], ",", 
         RowBox[{"\"\<out(1)\>\"", "->", "\"\<christ[0][0][1]\>\""}], ",", 
         RowBox[{"\"\<out(2)\>\"", "->", "\"\<christ[0][0][2]\>\""}], ",", 
         RowBox[{"\"\<out(3)\>\"", "->", "\"\<christ[0][0][3]\>\""}], ",", 
         RowBox[{"\"\<out(4)\>\"", "->", "\"\<christ[0][1][0]\>\""}], ",", 
         RowBox[{"\"\<out(5)\>\"", "->", "\"\<christ[0][1][1]\>\""}], ",", 
         RowBox[{"\"\<out(6)\>\"", "->", "\"\<christ[0][1][2]\>\""}], ",", 
         RowBox[{"\"\<out(7)\>\"", "->", "\"\<christ[0][1][3]\>\""}], ",", 
         RowBox[{"\"\<out(8)\>\"", "->", "\"\<christ[0][2][0]\>\""}], ",", 
         RowBox[{"\"\<out(9)\>\"", "->", "\"\<christ[0][2][1]\>\""}], ",", 
         RowBox[{"\"\<out(10)\>\"", "->", "\"\<christ[0][2][2]\>\""}], ",", 
         RowBox[{"\"\<out(11)\>\"", "->", "\"\<christ[0][2][3]\>\""}], ",", 
         RowBox[{"\"\<out(12)\>\"", "->", "\"\<christ[0][3][0]\>\""}], ",", 
         RowBox[{"\"\<out(13)\>\"", "->", "\"\<christ[0][3][1]\>\""}], ",", 
         RowBox[{"\"\<out(14)\>\"", "->", "\"\<christ[0][3][2]\>\""}], ",", 
         RowBox[{"\"\<out(15)\>\"", "->", "\"\<christ[0][3][3]\>\""}], ",", 
         RowBox[{"\"\<out(16)\>\"", "->", "\"\<christ[1][0][0]\>\""}], ",", 
         RowBox[{"\"\<out(17)\>\"", "->", "\"\<christ[1][0][1]\>\""}], ",", 
         RowBox[{"\"\<out(18)\>\"", "->", "\"\<christ[1][0][2]\>\""}], ",", 
         RowBox[{"\"\<out(19)\>\"", "->", "\"\<christ[1][0][3]\>\""}], ",", 
         RowBox[{"\"\<out(20)\>\"", "->", "\"\<christ[1][1][0]\>\""}], ",", 
         RowBox[{"\"\<out(21)\>\"", "->", "\"\<christ[1][1][1]\>\""}], ",", 
         RowBox[{"\"\<out(22)\>\"", "->", "\"\<christ[1][1][2]\>\""}], ",", 
         RowBox[{"\"\<out(23)\>\"", "->", "\"\<christ[1][1][3]\>\""}], ",", 
         RowBox[{"\"\<out(24)\>\"", "->", "\"\<christ[1][2][0]\>\""}], ",", 
         RowBox[{"\"\<out(25)\>\"", "->", "\"\<christ[1][2][1]\>\""}], ",", 
         RowBox[{"\"\<out(26)\>\"", "->", "\"\<christ[1][2][2]\>\""}], ",", 
         RowBox[{"\"\<out(27)\>\"", "->", "\"\<christ[1][2][3]\>\""}], ",", 
         RowBox[{"\"\<out(28)\>\"", "->", "\"\<christ[1][3][0]\>\""}], ",", 
         RowBox[{"\"\<out(29)\>\"", "->", "\"\<christ[1][3][1]\>\""}], ",", 
         RowBox[{"\"\<out(30)\>\"", "->", "\"\<christ[1][3][2]\>\""}], ",", 
         RowBox[{"\"\<out(31)\>\"", "->", "\"\<christ[1][3][3]\>\""}], ",", 
         RowBox[{"\"\<out(32)\>\"", "->", "\"\<christ[2][0][0]\>\""}], ",", 
         RowBox[{"\"\<out(33)\>\"", "->", "\"\<christ[2][0][1]\>\""}], ",", 
         RowBox[{"\"\<out(34)\>\"", "->", "\"\<christ[2][0][2]\>\""}], ",", 
         RowBox[{"\"\<out(35)\>\"", "->", "\"\<christ[2][0][3]\>\""}], ",", 
         RowBox[{"\"\<out(36)\>\"", "->", "\"\<christ[2][1][0]\>\""}], ",", 
         RowBox[{"\"\<out(37)\>\"", "->", "\"\<christ[2][1][1]\>\""}], ",", 
         RowBox[{"\"\<out(38)\>\"", "->", "\"\<christ[2][1][2]\>\""}], ",", 
         RowBox[{"\"\<out(39)\>\"", "->", "\"\<christ[2][1][3]\>\""}], ",", 
         RowBox[{"\"\<out(40)\>\"", "->", "\"\<christ[2][2][0]\>\""}], ",", 
         RowBox[{"\"\<out(41)\>\"", "->", "\"\<christ[2][2][1]\>\""}], ",", 
         RowBox[{"\"\<out(42)\>\"", "->", "\"\<christ[2][2][2]\>\""}], ",", 
         RowBox[{"\"\<out(43)\>\"", "->", "\"\<christ[2][2][3]\>\""}], ",", 
         RowBox[{"\"\<out(44)\>\"", "->", "\"\<christ[2][3][0]\>\""}], ",", 
         RowBox[{"\"\<out(45)\>\"", "->", "\"\<christ[2][3][1]\>\""}], ",", 
         RowBox[{"\"\<out(46)\>\"", "->", "\"\<christ[2][3][2]\>\""}], ",", 
         RowBox[{"\"\<out(47)\>\"", "->", "\"\<christ[2][3][3]\>\""}], ",", 
         RowBox[{"\"\<out(48)\>\"", "->", "\"\<christ[3][0][0]\>\""}], ",", 
         RowBox[{"\"\<out(49)\>\"", "->", "\"\<christ[3][0][1]\>\""}], ",", 
         RowBox[{"\"\<out(50)\>\"", "->", "\"\<christ[3][0][2]\>\""}], ",", 
         RowBox[{"\"\<out(51)\>\"", "->", "\"\<christ[3][0][3]\>\""}], ",", 
         RowBox[{"\"\<out(52)\>\"", "->", "\"\<christ[3][1][0]\>\""}], ",", 
         RowBox[{"\"\<out(53)\>\"", "->", "\"\<christ[3][1][1]\>\""}], ",", 
         RowBox[{"\"\<out(54)\>\"", "->", "\"\<christ[3][1][2]\>\""}], ",", 
         RowBox[{"\"\<out(55)\>\"", "->", "\"\<christ[3][1][3]\>\""}], ",", 
         RowBox[{"\"\<out(56)\>\"", "->", "\"\<christ[3][2][0]\>\""}], ",", 
         RowBox[{"\"\<out(57)\>\"", "->", "\"\<christ[3][2][1]\>\""}], ",", 
         RowBox[{"\"\<out(58)\>\"", "->", "\"\<christ[3][2][2]\>\""}], ",", 
         RowBox[{"\"\<out(59)\>\"", "->", "\"\<christ[3][2][3]\>\""}], ",", 
         RowBox[{"\"\<out(60)\>\"", "->", "\"\<christ[3][3][0]\>\""}], ",", 
         RowBox[{"\"\<out(61)\>\"", "->", "\"\<christ[3][3][1]\>\""}], ",", 
         RowBox[{"\"\<out(62)\>\"", "->", "\"\<christ[3][3][2]\>\""}], ",", 
         RowBox[{"\"\<out(63)\>\"", "->", "\"\<christ[3][3][3]\>\""}]}], 
        "}"}]}], "]"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "header", "=", 
   "\"\<void christoffel(long double r, long double th, long double \
christ[4][4][4])\\n{\\n\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"footer", "=", "\"\<\\n}\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"christoffel", "=", 
   RowBox[{"header", "<>", "meat", "<>", "footer"}]}], ";"}]}], "Input",Expres\
sionUUID->"7b95f208-5fa1-4319-9269-9e2da7dacc17"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"output", "=", "christoffel"}], ";"}], "\n", 
 RowBox[{}], "\n", 
 RowBox[{"(*", 
  RowBox[{"write", "to", "christoffel", "file"}], "*)"}], "\n", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<christoffel.cpp\>\"", ",", "output", ",", "\"\<Text\>\""}], 
   "]"}], ";"}]}], "Input",ExpressionUUID->"8e4112b5-671b-40b0-a157-\
e372794589b0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Redshift", "Section",ExpressionUUID->"e7558114-eb4e-49bf-a5d2-e7028d59b433"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"OptimizeExpressionToC", "[", 
   RowBox[{"{", "g", "}"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"meat", "=", 
   RowBox[{"ToString", "[", 
    RowBox[{"Column", "[", 
     RowBox[{"StringReplace", "[", 
      RowBox[{"%", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<Sqrt\>\"", "->", "\"\<sqrt\>\""}], ",", 
         RowBox[{"\"\<Power(E,\>\"", "->", "\"\<exp(\>\""}], ",", 
         RowBox[{"\"\<Power\>\"", "->", "\"\<pow\>\""}], ",", 
         RowBox[{"\"\<Sin\>\"", "->", "\"\<sin\>\""}], ",", 
         RowBox[{"\"\<Cos\>\"", "->", "\"\<cos\>\""}], ",", 
         RowBox[{"\"\<Csc\>\"", "->", "\"\<1/sin\>\""}], ",", 
         RowBox[{"\"\<Cot\>\"", "->", "\"\<1/tan\>\""}], ",", 
         RowBox[{"\"\<double\>\"", "->", "\"\<long double\>\""}], ",", 
         RowBox[{"\"\<;,\>\"", "->", "\"\<;\\n    \>\""}], ",", 
         RowBox[{"\"\<out(0)\>\"", "->", "\"\<gg\>\""}]}], "}"}]}], "]"}], 
     "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "header", "=", 
   "\"\<void redshift(long double r, long double th, long double ktkp, long \
double &gg)\\n{\\n\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"footer", "=", "\"\<\\n}\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"red", "=", 
   RowBox[{"header", "<>", "meat", "<>", "footer"}]}], ";"}]}], "Input",Expres\
sionUUID->"e2785a66-6f20-466e-9977-e560af7edf93"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"OptimizeExpressionToC", "[", 
   RowBox[{"{", "se", "}"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"meat", "=", 
   RowBox[{"ToString", "[", 
    RowBox[{"Column", "[", 
     RowBox[{"StringReplace", "[", 
      RowBox[{"%", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<Sqrt\>\"", "->", "\"\<sqrt\>\""}], ",", 
         RowBox[{"\"\<Power(E,\>\"", "->", "\"\<exp(\>\""}], ",", 
         RowBox[{"\"\<Power\>\"", "->", "\"\<pow\>\""}], ",", 
         RowBox[{"\"\<Sin\>\"", "->", "\"\<sin\>\""}], ",", 
         RowBox[{"\"\<Cos\>\"", "->", "\"\<cos\>\""}], ",", 
         RowBox[{"\"\<Csc\>\"", "->", "\"\<1/sin\>\""}], ",", 
         RowBox[{"\"\<Cot\>\"", "->", "\"\<1/tan\>\""}], ",", 
         RowBox[{"\"\<double\>\"", "->", "\"\<long double\>\""}], ",", 
         RowBox[{"\"\<;,\>\"", "->", "\"\<;\\n    \>\""}], ",", 
         RowBox[{"\"\<out(0)\>\"", "->", "\"\<long double se\>\""}]}], 
        "}"}]}], "]"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "header", "=", 
   "\"\<long double specific_energy(long double r)\\n{\\n\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"footer", "=", "\"\<\\nreturn se;\\n}\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"specificE", "=", 
   RowBox[{"header", "<>", "meat", "<>", "footer"}]}], ";"}]}], "Input",Expres\
sionUUID->"634c6a11-236a-48e7-9596-0e4635498043"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"OptimizeExpressionToC", "[", 
   RowBox[{"{", "Lzsub", "}"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"meat", "=", 
   RowBox[{"ToString", "[", 
    RowBox[{"Column", "[", 
     RowBox[{"StringReplace", "[", 
      RowBox[{"%", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<Sqrt\>\"", "->", "\"\<sqrt\>\""}], ",", 
         RowBox[{"\"\<Power(E,\>\"", "->", "\"\<exp(\>\""}], ",", 
         RowBox[{"\"\<Power\>\"", "->", "\"\<pow\>\""}], ",", 
         RowBox[{"\"\<Sin\>\"", "->", "\"\<sin\>\""}], ",", 
         RowBox[{"\"\<Cos\>\"", "->", "\"\<cos\>\""}], ",", 
         RowBox[{"\"\<Csc\>\"", "->", "\"\<1/sin\>\""}], ",", 
         RowBox[{"\"\<Cot\>\"", "->", "\"\<1/tan\>\""}], ",", 
         RowBox[{"\"\<double\>\"", "->", "\"\<long double\>\""}], ",", 
         RowBox[{"\"\<;,\>\"", "->", "\"\<;\\n    \>\""}], ",", 
         RowBox[{"\"\<out(0)\>\"", "->", "\"\<long double Lz\>\""}]}], 
        "}"}]}], "]"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "header", "=", 
   "\"\<long double specific_momentum(long double r)\\n{\\n\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"footer", "=", "\"\<\\nreturn Lz;\\n}\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"specificL", "=", 
   RowBox[{"header", "<>", "meat", "<>", "footer"}]}], ";"}]}], "Input",Expres\
sionUUID->"a9dd02ce-b85e-4249-a656-fda94219ed8e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"output", "=", 
   RowBox[{
   "red", "<>", "\"\<\\n\\n\>\"", "<>", "specificE", "<>", "\"\<\\n\\n\>\"", "<>",
     "specificL"}]}], ";"}], "\n", 
 RowBox[{}], "\n", 
 RowBox[{"(*", 
  RowBox[{"write", "to", 
   RowBox[{"metric", ".", "cpp"}], "file"}], "*)"}], "\n", 
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\<C:\\\\Users\\\\WalkerXin\\\\Documents\\\\Scripts\\\\raytransfer\>\"", 
   "]"}], ";"}], "\n", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<redshift.cpp\>\"", ",", "output", ",", "\"\<Text\>\""}], 
  "]"}]}], "Input",ExpressionUUID->"6b11c355-1b40-4928-86be-8fd31517c047"],

Cell[BoxData["\<\"redshift.cpp\"\>"], "Output",
 CellLabel->
  "Out[132]= ",ExpressionUUID->"d932cedb-19de-4596-948a-17f4f51fd23b"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"OptimizeExpressionToC", "[", 
   RowBox[{"{", "d2Veffsub", "}"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"meat", "=", 
   RowBox[{"ToString", "[", 
    RowBox[{"Column", "[", 
     RowBox[{"StringReplace", "[", 
      RowBox[{"%", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<Sqrt\>\"", "->", "\"\<sqrt\>\""}], ",", 
         RowBox[{"\"\<Power(E,\>\"", "->", "\"\<exp(\>\""}], ",", 
         RowBox[{"\"\<Power\>\"", "->", "\"\<pow\>\""}], ",", 
         RowBox[{"\"\<Sin\>\"", "->", "\"\<sin\>\""}], ",", 
         RowBox[{"\"\<Cos\>\"", "->", "\"\<cos\>\""}], ",", 
         RowBox[{"\"\<Csc\>\"", "->", "\"\<1/sin\>\""}], ",", 
         RowBox[{"\"\<Cot\>\"", "->", "\"\<1/tan\>\""}], ",", 
         RowBox[{"\"\<double\>\"", "->", "\"\<long double\>\""}], ",", 
         RowBox[{"\"\<;,\>\"", "->", "\"\<;\\n    \>\""}], ",", 
         RowBox[{"\"\<out(0)\>\"", "->", "\"\<long double d2Veff\>\""}]}], 
        "}"}]}], "]"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "header", "=", 
   "\"\<long double Veff_deri2(long double r, long double E, long double \
Lz)\\n{\\n\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"footer", "=", "\"\<\\nreturn d2Veff;\\n}\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Veffderi2", "=", 
   RowBox[{"header", "<>", "meat", "<>", "footer"}]}], ";"}]}], "Input",Expres\
sionUUID->"918926e2-eaff-46b1-8b4c-707ba0b7b8a7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"output", "=", "Veffderi2"}], ";"}], "\n", 
 RowBox[{}], "\n", 
 RowBox[{"(*", 
  RowBox[{"write", "to", 
   RowBox[{"metric", ".", "cpp"}], "file"}], "*)"}], "\n", 
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\<C:\\\\Users\\\\WalkerXin\\\\Documents\\\\Scripts\\\\raytransfer\>\"", 
   "]"}], ";"}], "\n", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<effective_potential.cpp\>\"", ",", "output", ",", "\"\<Text\>\""}], 
  "]"}]}], "Input",ExpressionUUID->"ef3487ba-7673-4830-8861-26c8e06b33fd"],

Cell[BoxData["\<\"effective_potential.cpp\"\>"], "Output",
 CellLabel->
  "Out[140]= ",ExpressionUUID->"760ab398-d610-422c-8cb3-f48e6830c100"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{583.8, 655.8},
WindowMargins->{{Automatic, 470.4000000000001}, {
  64.20000000000005, Automatic}},
FrontEndVersion->"13.1 for Microsoft Windows (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"01010919-12cc-40d8-983d-e09c23c2dea0"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 152, 2, 28, "Input",ExpressionUUID->"afbf2944-d3be-42a0-af0a-81cb8edd5f10"],
Cell[735, 26, 386, 9, 28, "Message",ExpressionUUID->"41c0a56a-c6b5-4733-bfee-b2d5a4ebc861"]
}, Open  ]],
Cell[1136, 38, 1782, 59, 181, "Input",ExpressionUUID->"76964c07-3471-44cc-85fe-3da9383c562f"],
Cell[2921, 99, 518, 17, 162, "Input",ExpressionUUID->"ade89b06-e147-4f23-b30e-413bc23ba5f5"],
Cell[3442, 118, 152, 3, 28, "Input",ExpressionUUID->"e9e4e5fc-3acd-4630-ad75-a02797b655c5"],
Cell[CellGroupData[{
Cell[3619, 125, 101, 0, 69, "Chapter",ExpressionUUID->"b510bff1-ba58-45a8-a7f9-1d49b252a700"],
Cell[CellGroupData[{
Cell[3745, 129, 3100, 98, 314, "Input",ExpressionUUID->"c88e7f9d-1639-4236-8abf-236dfaf0406b"],
Cell[6848, 229, 4320, 131, 147, "Output",ExpressionUUID->"46fa979f-3f3e-4892-8c2c-d91784b50f07"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11205, 365, 529, 15, 67, "Input",ExpressionUUID->"166ebbb0-33a3-4512-8ec7-9da4feb23a6a"],
Cell[11737, 382, 223, 7, 46, "Output",ExpressionUUID->"f287e1fa-bc7d-4c44-9694-8532fca86683"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[12009, 395, 92, 0, 69, "Chapter",ExpressionUUID->"a7e0f0ee-0bf4-4b7e-876f-35045ab9584f"],
Cell[CellGroupData[{
Cell[12126, 399, 305, 7, 28, "Input",ExpressionUUID->"adc90f0f-d4ba-4b5d-ab5e-e182f29d8ef9"],
Cell[12434, 408, 2115, 62, 113, "Output",ExpressionUUID->"02674a98-3811-4218-aa7d-59630aa807d8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14586, 475, 1709, 53, 88, "Input",ExpressionUUID->"33cb4142-362e-40f9-b7e0-fafe8c0d73b8"],
Cell[16298, 530, 195, 4, 32, "Output",ExpressionUUID->"1a34c19a-2858-4705-9683-79caa19e0ab7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16530, 539, 821, 22, 86, "Input",ExpressionUUID->"74e744a1-cd25-4f61-a2f4-603cd79484cb"],
Cell[17354, 563, 105328, 1727, 179, "Output",ExpressionUUID->"d4fb6201-8c51-4a5a-a3b2-70bf8607c4f9"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[122731, 2296, 92, 0, 69, "Chapter",ExpressionUUID->"fd88a432-f50f-4a7c-ac46-99dbfef25b39"],
Cell[122826, 2298, 677, 21, 86, "Input",ExpressionUUID->"3b9ab370-4d0e-4059-9383-780a59c773e3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[123540, 2324, 105, 0, 69, "Chapter",ExpressionUUID->"5e06d3a8-5fec-43b4-9580-aefe51eaf4a5"],
Cell[123648, 2326, 286, 8, 48, "Input",ExpressionUUID->"074949ff-df56-4c26-85ba-aeff36a59a38"],
Cell[123937, 2336, 1246, 43, 143, "Input",ExpressionUUID->"67d0de50-021a-4f3a-8a8b-a45d3bac1f8c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[125220, 2384, 92, 0, 69, "Chapter",ExpressionUUID->"caf1af02-65a5-41dd-aab3-cb0befa005ea"],
Cell[125315, 2386, 491, 12, 67, "Input",ExpressionUUID->"e148c335-9657-414d-96f5-717fed4a9ad8"],
Cell[CellGroupData[{
Cell[125831, 2402, 641, 19, 67, "Input",ExpressionUUID->"e0e74335-8874-4f94-98f6-a7d00469cdea"],
Cell[126475, 2423, 223, 7, 46, "Output",ExpressionUUID->"47b777d9-a6bb-4a11-8b9a-2fda1d854186"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[126747, 2436, 82, 0, 70, "Chapter",ExpressionUUID->"abd0bbd4-9ce7-41ea-b790-1ca8a16e520d"],
Cell[126832, 2438, 1140, 35, 70, "Input",ExpressionUUID->"4581fd29-3784-4f33-95ce-857c7bd0146a"],
Cell[127975, 2475, 765, 23, 70, "Input",ExpressionUUID->"25932e69-f09c-4759-bd6f-48980a1fdc3c"],
Cell[CellGroupData[{
Cell[128765, 2502, 268, 8, 70, "Input",ExpressionUUID->"09f60ce0-2583-4268-8461-ac1f730e19b4"],
Cell[129036, 2512, 21386, 544, 70, "Output",ExpressionUUID->"1a8db8b9-5068-4d39-af26-da76badd37ef"]
}, Open  ]],
Cell[150437, 3059, 613, 20, 70, "Input",ExpressionUUID->"9ddc39d6-4071-4a4e-8292-68cc167d6548"],
Cell[151053, 3081, 616, 20, 70, "Input",ExpressionUUID->"aa32c258-2aaa-4fdc-bff4-2b0bcd0c75e8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[151706, 3106, 78, 0, 70, "Chapter",ExpressionUUID->"6a9fab9a-ee1a-41ed-9693-24cda3f04fc5"],
Cell[151787, 3108, 2194, 71, 70, "Input",ExpressionUUID->"46ce9bea-7ee1-4ff1-bf82-5f3d8c49e452"],
Cell[CellGroupData[{
Cell[154006, 3183, 269, 7, 70, "Input",ExpressionUUID->"7b62931d-4fc1-467e-bd1a-aa0f38754256"],
Cell[154278, 3192, 2856, 88, 70, "Output",ExpressionUUID->"e7e41448-faae-4cd2-b0d6-f2cedf975da8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[157171, 3285, 326, 9, 70, "Input",ExpressionUUID->"aa33d9ec-48b8-4401-b8d0-461b180254ba"],
Cell[157500, 3296, 522, 15, 70, "Output",ExpressionUUID->"9db1e840-622f-4afb-bf6f-cdf0619b12bb"]
}, Open  ]],
Cell[158037, 3314, 523, 14, 70, "Input",ExpressionUUID->"3a43b61b-082b-4320-9e03-b043e877d78e"],
Cell[CellGroupData[{
Cell[158585, 3332, 287, 8, 70, "Input",ExpressionUUID->"67ac3e28-33b4-4f6f-a337-c852158415ed"],
Cell[158875, 3342, 1204, 43, 70, "Output",ExpressionUUID->"ceab6c1b-bc38-48f8-8216-9d2f224d707c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[160116, 3390, 262, 7, 70, "Input",ExpressionUUID->"772ae907-1055-4aed-92ed-de40d204ba2c"],
Cell[160381, 3399, 3046, 89, 70, "Output",ExpressionUUID->"e8e0085a-88cd-41e9-8644-0dc3d79aa8a3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[163476, 3494, 91, 0, 70, "Chapter",ExpressionUUID->"e86d589f-18e4-4664-b1eb-8bec6e487813"],
Cell[CellGroupData[{
Cell[163592, 3498, 10622, 295, 70, "Input",ExpressionUUID->"137e3024-21ad-41f9-b72a-1714ffab989e"],
Cell[174217, 3795, 140, 2, 70, "Output",ExpressionUUID->"7dbbc1d3-8841-45a3-8be8-47e430d75fce"],
Cell[174360, 3799, 126, 2, 70, "Output",ExpressionUUID->"0258816b-5e95-4e64-aaac-909b12827129"],
Cell[174489, 3803, 126, 2, 70, "Output",ExpressionUUID->"cf865c7f-a371-431e-b8a8-492cea35be6d"]
}, Open  ]],
Cell[174630, 3808, 236, 7, 70, "Input",ExpressionUUID->"e41fa0bd-dbd5-4f97-bb77-0663ef45a035"],
Cell[CellGroupData[{
Cell[174891, 3819, 91, 0, 70, "Section",ExpressionUUID->"5848865e-2756-4207-958b-9c2504a6e64c"],
Cell[174985, 3821, 4453, 113, 70, "Input",ExpressionUUID->"804ea68d-e521-4a65-b8cf-9e6fefd84ac0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[179475, 3939, 94, 0, 70, "Section",ExpressionUUID->"2eba0954-9138-4807-975f-0c24d529cc2d"],
Cell[179572, 3941, 4533, 113, 70, "Input",ExpressionUUID->"e2b72919-03b4-4f09-85dc-342265de28cf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[184142, 4059, 95, 0, 70, "Section",ExpressionUUID->"9aff1f56-1e73-4dc2-81ac-907d64538398"],
Cell[184240, 4061, 4568, 113, 70, "Input",ExpressionUUID->"ef2c85ed-0a51-45e5-9483-ab7deb30f5ab"]
}, Open  ]],
Cell[CellGroupData[{
Cell[188845, 4179, 101, 0, 70, "Section",ExpressionUUID->"f3b3dc00-db6d-46f0-8917-73c73ff3d04c"],
Cell[188949, 4181, 4528, 113, 70, "Input",ExpressionUUID->"af7e0d48-985d-461e-800a-a21f62cfdb0a"],
Cell[CellGroupData[{
Cell[193502, 4298, 674, 18, 70, "Input",ExpressionUUID->"9e1be641-5d85-450e-b480-1cb75817f18e"],
Cell[194179, 4318, 129, 2, 70, "Output",ExpressionUUID->"31fc72fc-b7a5-4b73-9717-ad75d36b1fa7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[194357, 4326, 93, 0, 70, "Section",ExpressionUUID->"97bc8269-6f4c-4e26-b57d-accba8b908ce"],
Cell[194453, 4328, 18729, 481, 70, "Input",ExpressionUUID->"7b95f208-5fa1-4319-9269-9e2da7dacc17"],
Cell[213185, 4811, 379, 10, 70, "Input",ExpressionUUID->"8e4112b5-671b-40b0-a157-e372794589b0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[213601, 4826, 82, 0, 70, "Section",ExpressionUUID->"e7558114-eb4e-49bf-a5d2-e7028d59b433"],
Cell[213686, 4828, 1381, 33, 70, "Input",ExpressionUUID->"e2785a66-6f20-466e-9977-e560af7edf93"],
Cell[215070, 4863, 1377, 32, 70, "Input",ExpressionUUID->"634c6a11-236a-48e7-9596-0e4635498043"],
Cell[216450, 4897, 1385, 33, 70, "Input",ExpressionUUID->"a9dd02ce-b85e-4249-a656-fda94219ed8e"],
Cell[CellGroupData[{
Cell[217860, 4934, 624, 17, 70, "Input",ExpressionUUID->"6b11c355-1b40-4928-86be-8fd31517c047"],
Cell[218487, 4953, 131, 2, 70, "Output",ExpressionUUID->"d932cedb-19de-4596-948a-17f4f51fd23b"]
}, Open  ]],
Cell[218633, 4958, 1420, 33, 70, "Input",ExpressionUUID->"918926e2-eaff-46b1-8b4c-707ba0b7b8a7"],
Cell[CellGroupData[{
Cell[220078, 4995, 535, 15, 70, "Input",ExpressionUUID->"ef3487ba-7673-4830-8861-26c8e06b33fd"],
Cell[220616, 5012, 142, 2, 70, "Output",ExpressionUUID->"760ab398-d610-422c-8cb3-f48e6830c100"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

